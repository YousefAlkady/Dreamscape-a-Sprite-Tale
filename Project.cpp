#include <iostream>
#include <conio.h>
using namespace std;

const int VIEW_ROWS = 24;
const int VIEW_COLS = 120;


struct Size
{
    int X;
    int Y;
};

//Fill
void FillMatrixByMyBackGround(char screenArray[1000][1000]) {
    for (int r = 0; r < 1000; r++) {
        for (int c = 0; c < 1000; c++) {
            screenArray[r][c] = ' ';
        }
    }
}
void DispStartScreen(char ScreenArray[1000][1000])
{
    system("cls");
    system("color 3");



    for (int r = 0; r < 29; r++)
        for (int c = 0; c < 120; c++)
            cout << ScreenArray[r][c];

    cout << '\n';
}
void DispStartScreenRainbowOrange(char ScreenArray[1000][1000])
{
    system("cls");
    system("color 6");

    for (int r = 0; r < 29; r++)
        for (int c = 0; c < 120; c++)
            cout << ScreenArray[r][c];

    cout << '\n';
}
void DispStartScreenRainbowBlue(char ScreenArray[1000][1000])
{
    system("cls");
    system("color 9");

    for (int r = 0; r < 29; r++)
        for (int c = 0; c < 120; c++)
            cout << ScreenArray[r][c];

    cout << '\n';
}
void DispStartScreenRainbowGreen(char ScreenArray[1000][1000])
{
    system("cls");
    system("color 2");

    for (int r = 0; r < 29; r++)
        for (int c = 0; c < 120; c++)
            cout << ScreenArray[r][c];

    cout << '\n';
}
void DispStartScreenRainbowCyan(char ScreenArray[1000][1000])
{
    system("cls");
    system("color 3");

    for (int r = 0; r < 29; r++)
        for (int c = 0; c < 120; c++)
            cout << ScreenArray[r][c];

    cout << '\n';
}
void DispStartScreenRainbowGrey(char ScreenArray[1000][1000])
{
    system("cls");
    system("color 0");

    for (int r = 0; r < 29; r++)
        for (int c = 0; c < 120; c++)
            cout << ScreenArray[r][c];

    cout << '\n';
}
void DispStartScreenRainbowRed(char ScreenArray[1000][1000])
{
    system("cls");
    system("color 4");

    for (int r = 0; r < 29; r++)
        for (int c = 0; c < 120; c++)
            cout << ScreenArray[r][c];

    cout << '\n';
}
void DispStartScreenRainbowMagenta(char ScreenArray[1000][1000])
{
    system("cls");
    system("color 5");

    for (int r = 0; r < 29; r++)
        for (int c = 0; c < 120; c++)
            cout << ScreenArray[r][c];

    cout << '\n';
}
void DispStartScreenRainbowYellow(char ScreenArray[1000][1000])
{
    system("cls");
    system("color 6");

    for (int r = 0; r < 29; r++)
        for (int c = 0; c < 120; c++)
            cout << ScreenArray[r][c];

    cout << '\n';
}
void DispStartScreenBed(char ScreenArray[1000][1000])
{
    system("cls");
    system("color 3");

    for (int r = 0; r < 29; r++)
        for (int c = 0; c < 120; c++)
            cout << ScreenArray[r][c];

    cout << '\n';
}
void DispStartScreenPacOver(char ScreenArray[1000][1000])
{
    system("cls");
    system("color 4");

    for (int r = 0; r < 29; r++)
        for (int c = 0; c < 120; c++)
            cout << ScreenArray[r][c];

    cout << '\n';
}
void DispStartScreenPac(char ScreenArray[1000][1000])
{
    system("cls");
    system("color 5");

    for (int r = 0; r < 29; r++)
        for (int c = 0; c < 120; c++)
            cout << ScreenArray[r][c];

    cout << '\n';
}
void DispStartScreenOver(char ScreenArray[1000][1000])
{
    system("cls");
    system("color 4");

    for (int r = 0; r < 29; r++)
        for (int c = 0; c < 120; c++)
            cout << ScreenArray[r][c];

    cout << '\n';
}
void DispRoom(char ScreenArray[1000][1000])
{
    system("cls");
    system("color 3");

    for (int r = 0; r < 23; r++)
        for (int c = 0; c < 120; c++)
            cout << ScreenArray[r][c];

    cout << '\n';
}
void DispToscreen(char ScreenArray[1000][1000], int HeroCol, int heroRow) {
    system("cls");

    int startRow = heroRow - 13;
    if (startRow < 0) startRow = 0;
    if (startRow > 80 - 26) startRow = 80 - 26;

    for (int r = startRow; r < startRow + 26; r++) {
        for (int c = HeroCol - 10; c < HeroCol + 100; c++) {
            cout << ScreenArray[r][c];
        }
        cout << '\n';
    }
}
void DispToscreen1lvl4(const char ScreenArray[1000][1000], int HeroCol, int heroRow) {
    system("cls");
    system("color 2");

    int viewStartCol = HeroCol - VIEW_COLS / 2;
    int viewStartRow = heroRow - VIEW_ROWS / 2;

    if (viewStartCol < 0) viewStartCol = 0;
    if (viewStartCol > 1000 - VIEW_COLS) viewStartCol = 1000 - VIEW_COLS;
    if (viewStartRow < 0) viewStartRow = 0;
    if (viewStartRow > 1000 - VIEW_ROWS) viewStartRow = 1000 - VIEW_ROWS;

    // Display the viewport
    for (int r = viewStartRow; r < viewStartRow + VIEW_ROWS + 5; r++) {
        for (int c = viewStartCol; c < viewStartCol + VIEW_COLS; c++) {
            // Ensure we don't go out of bounds
            if (r >= 0 && r < 1000 && c >= 0 && c < 1000) {
                cout << ScreenArray[r][c];
            }

        }
        cout << '\n';



    }

}
void DispToscreen1(const char ScreenArray[1000][1000], int HeroCol, int heroRow) {
    system("cls");

    int viewStartCol = HeroCol - VIEW_COLS / 2;
    int viewStartRow = heroRow - VIEW_ROWS / 2;

    if (viewStartCol < 0) viewStartCol = 0;
    if (viewStartCol > 1000 - VIEW_COLS) viewStartCol = 1000 - VIEW_COLS;
    if (viewStartRow < 0) viewStartRow = 0;
    if (viewStartRow > 1000 - VIEW_ROWS) viewStartRow = 1000 - VIEW_ROWS;

    // Display the viewport
    for (int r = viewStartRow; r < viewStartRow + VIEW_ROWS + 5; r++) {
        for (int c = viewStartCol; c < viewStartCol + VIEW_COLS; c++) {
            // Ensure we don't go out of bounds
            if (r >= 0 && r < 1000 && c >= 0 && c < 1000) {
                cout << ScreenArray[r][c];
            }

        }
        cout << '\n';



    }

}
void DispToscreen1Pac(const char ScreenArray[1000][1000], int HeroCol, int heroRow) {
    system("cls");
    system("color 5");

    int viewStartCol = HeroCol - VIEW_COLS / 2;
    int viewStartRow = heroRow - VIEW_ROWS / 2;

    if (viewStartCol < 0) viewStartCol = 0;
    if (viewStartCol > 1000 - VIEW_COLS) viewStartCol = 1000 - VIEW_COLS;
    if (viewStartRow < 0) viewStartRow = 0;
    if (viewStartRow > 1000 - VIEW_ROWS) viewStartRow = 1000 - VIEW_ROWS;

    // Display the viewport
    for (int r = viewStartRow; r < viewStartRow + VIEW_ROWS + 5; r++) {
        for (int c = viewStartCol; c < viewStartCol + VIEW_COLS; c++) {
            // Ensure we don't go out of bounds
            if (r >= 0 && r < 1000 && c >= 0 && c < 1000) {
                cout << ScreenArray[r][c];
            }

        }
        cout << '\n';



    }

}
void DispToscreen1woods(const char ScreenArray[1000][1000], int HeroCol, int heroRow)
{

    system("cls");
    system("color 02");

    int viewStartCol = HeroCol - VIEW_COLS / 2;
    int viewStartRow = heroRow - VIEW_ROWS / 2;

    if (viewStartCol < 0) viewStartCol = 0;
    if (viewStartCol > 1000 - VIEW_COLS) viewStartCol = 1000 - VIEW_COLS;
    if (viewStartRow < 0) viewStartRow = 0;
    if (viewStartRow > 1000 - VIEW_ROWS) viewStartRow = 1000 - VIEW_ROWS;

    // Display the viewport
    for (int r = viewStartRow; r < viewStartRow + VIEW_ROWS + 5; r++) {
        for (int c = viewStartCol; c < viewStartCol + VIEW_COLS; c++) {
            // Ensure we don't go out of bounds
            if (r >= 0 && r < 1000 && c >= 0 && c < 1000) {
                cout << ScreenArray[r][c];
            }

        }
        cout << '\n';



    }

}
//Text
void TheEnd(char screenArray[1000][1000], int rText, int cText)
{
    char TheEnd[16][137] = {
    {'T','T','T','T','T','T','T','T','T','T','T','T','T','T','T','T','T','T','T','T','T','T','T','H','H','H','H','H','H','H','H','H',' ',' ',' ',' ',' ','H','H','H','H','H','H','H','H','H','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E',' ',' ','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','N','N','N','N','N','N','N','N',' ',' ',' ',' ',' ',' ',' ',' ','N','N','N','N','N','N','N','N','D','D','D','D','D','D','D','D','D','D','D','D','D',' ',' ',' ',' ',' ',' ',' ',' '},
    {},
    {},
    {'T',':',':',':',':',':','T','T',':',':',':',':',':',':',':','T','T',':',':',':',':',':','T','H','H',':',':',':',':',':',':','H',' ',' ',' ',' ',' ','H',':',':',':',':',':',':','H','H','E','E',':',':',':',':',':',':','E','E','E','E','E','E','E','E','E',':',':',':',':','E',' ',' ','E','E',':',':',':',':',':',':','E','E','E','E','E','E','E','E','E',':',':',':',':','E','N',':',':',':',':',':',':',':',':',':','N',' ',' ',' ',' ',' ','N',':',':',':',':',':',':','N','D','D','D',':',':',':',':',':','D','D','D','D','D',':',':',':',':',':','D',' ',' '},
    {},
    {},
    {},
    {},
    {},
    {},
    {},
    {},
    {},
    {},
    {},
    {},
    };
    for (int r = 0; r < 16; r++) {
        for (int c = 0; c < 137; c++) {
            if (rText + r < 80 && cText + c < 120)
                screenArray[rText + r][cText + c] = TheEnd[r][c];
        }
    }
}
void GameName(char screenArray[1000][1000], int rText, int cText)
{
    char gameName[6][71] =
    {
    {' ','_',' ',' ',' ','_',' ',' ','_','_','_','_','_',' ',' ',' ',' ',' ','_',' ',' ',' ',' ','_',' ',' ',' ','_','_','_',' ',' ','_','_',' ',' ',' ','_','_',' ',' ',' ',' ','_',' ',' ',' ','_',' ',' ',' ',' ',' ',' ',' ',' ','_','_','_',' ',' ','_','_','_',' ','_','_','_','_','_',' '},
    {'|',' ','\\',' ','|',' ','|','|',' ',' ','_',' ',' ','|',' ',' ',' ','|',' ','|',' ',' ','|',' ','|',' ','/',' ','_',' ','\\',' ','\\',' ','\\',' ','/',' ','/',' ',' ',' ','|',' ','|',' ','|',' ','|',' ',' ',' ',' ',' ',' ','|','|',' ',' ','\\','/',' ',' ','|','|',' ',' ','_','_','_','|'},
    {'|',' ',' ','\\','|',' ','|','|',' ','|',' ','|',' ','|',' ',' ',' ','|',' ','|',' ',' ','|',' ','|','/',' ','/','_','\\',' ','\\',' ','\\',' ','V',' ','/',' ',' ',' ',' ','|',' ','|','_','|',' ','|',' ',' ',' ',' ',' ',' ','|','|',' ','.',' ',' ','.',' ','|','|',' ','|','_','_',' ',' '},
    {'|',' ','.',' ','`',' ','|','|',' ','|',' ','|',' ','|',' ',' ',' ','|',' ','|','/','\\','|',' ','|','|',' ',' ','_',' ',' ','|',' ',' ','\\',' ','/',' ',' ',' ',' ',' ','|',' ',' ','_',' ',' ','|',' ',' ',' ',' ',' ',' ','|','|',' ','|','\\','/','|',' ','|','|',' ',' ','_','_','|',' '},
    {'|',' ','|','\\',' ',' ','|','\\',' ','\\','_','/',' ','/',' ',' ',' ','\\',' ',' ','/','\\',' ',' ','/','|',' ','|',' ','|',' ','|',' ',' ','|',' ','|',' ',' ',' ',' ',' ','|',' ','|',' ','|',' ','|',' ',' ',' ',' ',' ',' ','|','|',' ','|',' ',' ','|',' ','|','|',' ','|','_','_','_',' '},
    {'\\','_','|',' ','\\','_','/',' ','\\','_','_','_','/',' ',' ',' ',' ',' ','\\','/',' ',' ','\\','/',' ','\\','_','|',' ','|','_','/',' ',' ','\\','_','/',' ',' ',' ',' ',' ','\\','_','|',' ','|','_','/',' ',' ',' ',' ',' ',' ',' ','\\','_','|',' ',' ','|','_','/','\\','_','_','_','_','/',' '}
    };
    for (int r = 0; r < 6; r++) {
        for (int c = 0; c < 71; c++) {
            if (rText + r < 80 && cText + c < 120 && gameName[r][c] != ' ')
                screenArray[rText + r][cText + c] = gameName[r][c];
        }
    }
}
void GmaeOver(char screenArray[1000][1000], int rText, int cText)
{

    char GameOver[13][53] = {
    {' ',' ','_','_','_','_',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','_','_','_',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','_',' '},
    {' ','/',' ','_','_','_','|',' ','_','_',' ','_',' ','_',' ','_','_',' ','_','_','_',' ',' ',' ','_','_','_',' ',' ',' ','/',' ','_',' ','\\','_','_',' ',' ',' ','_','_','_','_','_',' ','_',' ','_','_','|',' ','|'},
    {'|',' ','|',' ',' ','_',' ','/',' ','_','`',' ','|',' ','\'','_',' ','`',' ','_',' ','\\',' ','/',' ','_',' ','\\',' ','|',' ','|',' ','|',' ','\\',' ','\\',' ','/',' ','/',' ','_',' ','\\',' ','\'','_','_','|',' ','|'},
    {'|',' ','|','_','|',' ','|',' ','(','_','|',' ','|',' ','|',' ','|',' ','|',' ','|',' ','|',' ',' ','_','_','/',' ','|',' ','|','_','|',' ','|','\\',' ','V',' ','/',' ',' ','_','_','/',' ','|',' ',' ','|','_','|'},
    {' ','\\','_','_','_','_','|','\\','_','_',',','_','|','_','|',' ','|','_','|',' ','|','_','|','\\','_','_','_','|',' ',' ','\\','_','_','_','/',' ',' ','\\','_','/',' ','\\','_','_','_','|','_','|',' ',' ','(','_',')'},
    {' ',' ',' ',' ',' ','_','_','_','_','_',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','_',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
    {' ',' ',' ',' ','|','_',' ',' ',' ','_','|',' ','_','_',' ','_',' ',' ',' ','_',' ',' ',' ',' ',' ','/',' ','\\',' ',' ',' ','_','_',' ','_',' ',' ','_','_',' ','_','(','_',')','_',' ','_','_',' ',' ',' ',' ',' '},
    {' ',' ',' ',' ',' ',' ','|',' ','|','|',' ','\'','_','_','|',' ','|',' ','|',' ','|',' ',' ',' ','/',' ','_',' ','\\',' ','/',' ','_','\'',' ','|','/',' ','_','`',' ','|',' ','|',' ','\'','_',' ','\\',' ',' ',' ',' '},
    {' ',' ',' ',' ',' ',' ','|',' ','|','|',' ','|',' ',' ','|',' ','|','_','|',' ','|',' ',' ','/',' ','_','_','_',' ','\\',' ','(','_','|',' ','|',' ','(','_','|',' ','|',' ','|',' ','|',' ','|',' ','|',' ',' ',' '},
    {' ',' ',' ',' ',' ',' ','|','_','|','|','_','|',' ',' ',' ','\\','_','_',',',' ','|',' ','/','_','/',' ',' ',' ','\\','_','\\','_','_',',',' ','|','\\','_','_',',','_','|','_','|','_','|',' ','|','_','|',' ',' ',' '},
    {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','_','_','_','/',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','_','_','_','/',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
    {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
    {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','P','R','E','S','S',' ','S','P','A','C','E','B','A','R',' ','T','O',' ','C','O','N','T','I','N','U','E',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},

    };
    for (int r = 0; r < 13; r++) {
        for (int c = 0; c < 53; c++) {
            if (rText + r < 80 && cText + c < 120)
                screenArray[rText + r][cText + c] = GameOver[r][c];
        }
    }
}
void Credits(char screenArray[1000][1000], int rText, int cText)
{

    char choice[8][34] =
    {
        {' ','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_',' '},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','C','R','E','D','I','T','S',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
        {'|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|'},

    };
    for (int r = 0; r < 8; r++) {
        for (int c = 0; c < 34; c++) {
            if (rText + r < 80 && cText + c < 120)
                screenArray[rText + r][cText + c] = choice[r][c];
        }
    }
}
void Play(char screenArray[1000][1000], int rText, int cText)
{

    char choice[10][34] =
    {
        {' ','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_',' '},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ','S','T','A','R','T',' ','P','L','A','Y','I','N','G','!',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
        {'|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|'},

    };
    for (int r = 0; r < 10; r++) {
        for (int c = 0; c < 34; c++) {
            if (rText + r < 80 && cText + c < 120)
                screenArray[rText + r][cText + c] = choice[r][c];
        }
    }
}
void Quit(char screenArray[1000][1000], int rText, int cText)
{

    char choice[8][34] =
    {
        {' ','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_',' '},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','Q','U','I','T',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
        {'|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|'},

    };
    for (int r = 0; r < 8; r++) {
        for (int c = 0; c < 34; c++) {
            if (rText + r < 80 && cText + c < 120)
                screenArray[rText + r][cText + c] = choice[r][c];
        }
    }
}
void Outline(char screenArray[1000][1000], int rText, int cText)
{

    char choice[10][38] =
    {
        {' ','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_',' '},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
        {'|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|'},

    };
    for (int r = 0; r < 10; r++) {
        for (int c = 0; c < 38; c++) {
            if (choice[r][c] != ' ' && rText + r < 80 && cText + c < 120)
                screenArray[rText + r][cText + c] = choice[r][c];
        }
    }
}
void OutlineP(char screenArray[1000][1000], int rText, int cText)
{

    char choice[12][38] =
    {
        {' ','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_',' '},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
        {'|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|'},

    };
    for (int r = 0; r < 12; r++) {
        for (int c = 0; c < 38; c++) {
            if (rText + r < 80 && cText + c < 120)
                screenArray[rText + r][cText + c] = choice[r][c];
        }
    }
}
void Names(char screenArray[1000][1000], int rText, int cText)
{
    char Names[18][86] = {
    {' ','_',' ',' ',' ',' ','_',' ',' ','_','_','_','_',' ',' ',' ','_','_','_','_','_',' ','_','_','_','_','_',' ',' ',' ',' ',' ',' ',' ',' ',' ','_','_',' ',' ','_','_',' ',' ',' ',' ','_','_','_','_','_',' ',' ',' ',' ',' ','_','_',' ',' ',' ',' ',' ','_','_','_','_','_','_','_','_',' ','_','_','_','_','_',' ',' ',' ',' ',' ',' ',' ',' ',' '},
    {'|',' ','|',' ',' ','|',' ','|','/',' ','_','_',' ','\\',' ','/',' ','_','_','_','_','/',' ','_','_','_','_','|',' ',' ','/','\\',' ',' ',' ','|',' ',' ','\\','/',' ',' ','|',' ',' ','/',' ','_','_','_','_','|',' ',' ','/','\\','\\',' ','\\',' ',' ',' ','/',' ','|',' ',' ','_','_','_','_','|',' ',' ','_','_',' ','\\',' ',' ',' ',' ',' ',' ',' ',' '},
    {'|',' ','|','_','_','|',' ','|',' ','|',' ',' ','|',' ','|',' ','(','_','_','_','|',' ','(','_','_','_',' ',' ',' ','/',' ',' ','\\',' ',' ','|',' ','\\',' ',' ','/',' ','|',' ','|',' ','(','_','_','_',' ',' ',' ','/',' ',' ','\\','\\',' ','\\','_','/',' ','/','|',' ','|','_','_',' ',' ','|',' ','|',' ',' ','|',' ','|',' ',' ',' ',' ',' ',' ',' '},
    {'|',' ',' ','_','_',' ',' ','|',' ','|',' ',' ','|',' ','|','\\','_','_','_',' ','\\','\\','_','_','_',' ','\\',' ','/',' ','/','\\',' ','\\',' ','|',' ','|','\\','/','|',' ','|',' ',' ','\\','_','_','_',' ','\\',' ','/',' ','/','\\',' ','\\','\\',' ',' ',' ','/',' ','|',' ',' ','_','_','|',' ','|',' ','|',' ',' ','|',' ','|',' ',' ',' ',' ',' ',' ',' '},
    {'|',' ','|',' ',' ','|',' ','|',' ','|','_','_','|',' ','|','_','_','_','_',')',' ','_','_','_','_',')',' ','/',' ','_','_','_','_',' ','\\','|',' ','|',' ',' ','|',' ','|',' ',' ','_','_','_','_',')',' ','/',' ','_','_','_','_',' ','\\','|',' ','|',' ',' ','|',' ','|','_','_','_','_','|',' ','|','_','_','|',' ','|',' ',' ',' ',' ',' ',' ',' '},
    {'|','_','|',' ',' ','|','_','|','\\','_','_','_','_','/','|','_','_','_','_','_','|','_','_','_','_','_','/','_','/',' ',' ',' ',' ','\\','_','|','_','|',' ',' ','|','_','|',' ','|','_','_','_','_','_','/','_','/',' ',' ',' ',' ','\\','_','|','_','|',' ',' ','|','_','_','_','_','_','_','|','_','_','_','_','_','/',' ',' ',' ',' ',' ',' ',' ',' '},
    {' ','_',' ',' ',' ','_',' ',' ','_','_','_','_',' ',' ',' ','_','_','_','_',' ',' ','_','_','_','_','_',' ',' ',' ',' ','_','_',' ',' ','_','_',' ',' ','_','_','_','_',' ',' ','_',' ',' ',' ',' ','_',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','_','_',' ',' ','_','_',' ','_','_','_','_','_','_',' ','_','_','_','_','_',' ',' ',' ',' ',' ',' ',' '},
    {'|',' ','\\',' ','|',' ','|','/',' ','_','_',' ','\\',' ','/',' ','_','_',' ','\\','|',' ',' ','_','_',' ','\\',' ',' ','|',' ',' ','\\','/',' ',' ','|','/',' ','_','_',' ','\\','|',' ','|',' ',' ','|',' ','|',' ',' ',' ','/','\\',' ',' ',' ','|',' ',' ','\\','/',' ',' ','|',' ',' ','_','_','_','_','|',' ',' ','_','_',' ','\\',' ',' ',' ',' ',' ',' '},
    {'|',' ',' ','\\','|',' ','|',' ','|',' ',' ','|',' ','|',' ','|',' ',' ','|',' ','|',' ','|','_','_',')',' ','|',' ','|',' ','\\',' ',' ','/',' ','|',' ','|',' ',' ','|',' ','|',' ','|','_','_','|',' ','|',' ',' ','/',' ',' ','\\',' ',' ','|',' ','\\',' ',' ','/',' ','|',' ','|','_','_',' ',' ','|',' ','|',' ',' ','|',' ','|',' ',' ',' ',' ',' '},
    {'|',' ','.',' ','`',' ','|',' ','|',' ',' ','|',' ','|',' ','|',' ',' ','|',' ','|',' ',' ','_',' ',' ','/',' ',' ','|',' ','|','\\','/','|',' ','|',' ','|',' ',' ','|',' ','|',' ',' ','_','_',' ',' ','|',' ','/',' ','/','\\',' ','\\',' ','|',' ','|','\\','/','|',' ','|',' ',' ','_','_','|',' ','|',' ','|',' ',' ','|',' ','|',' ',' ',' ',' ',' '},
    {'|',' ','|','\\',' ',' ','|',' ','|','_','_','|',' ','|',' ','|','_','_','|',' ','|',' ','|',' ','\\',' ','\\',' ',' ','|',' ','|',' ',' ','|',' ','|',' ','|','_','_','|',' ','|',' ','|',' ',' ','|',' ','|','/',' ','_','_','_','_',' ','\\','|',' ','|',' ',' ','|',' ','|',' ','|','_','_','_','_','|',' ','|','_','_','|',' ','|',' ',' ',' ',' ',' '},
    {'|','_','|',' ','\\','_','|','\\','_','_','_','_','/',' ','\\','_','_','_','_','/','|','_','|',' ',' ','\\','_','\\',' ','|','_','|',' ',' ','|','_','|','\\','_','_','_','_','/','|','_','|',' ',' ','|','_','/','_','/',' ',' ',' ',' ','\\','_','|','_','|',' ',' ','|','_','|','_','_','_','_','_','_','|','_','_','_','_','_','/',' ',' ',' ',' ',' ',' '},
    {'_','_',' ',' ',' ',' ',' ','_','_','_','_','_','_',' ',' ','_',' ',' ',' ',' ','_',' ',' ','_','_','_','_','_',' ','_','_','_','_','_','_',' ','_','_','_','_','_','_',' ',' ',' ',' ',' ',' ',' ',' ',' ','_',' ',' ',' ',' ',' ',' ','_',' ',' ','_','_',' ',' ',' ',' ',' ',' ',' ',' ',' ','_','_','_','_','_','_','_',' ',' ',' ',' ',' ','_','_'},
    {'\\',' ','\\',' ',' ',' ','/',' ','/',' ','_','_',' ','\\','|',' ','|',' ',' ','|',' ','|','/',' ','_','_','_','_','|',' ',' ','_','_','_','_','|',' ',' ','_','_','_','_','|',' ',' ','/','\\',' ',' ',' ','|',' ','|',' ',' ',' ',' ','|',' ','|','/',' ','/',' ',' ',' ','/','\\',' ',' ',' ','|',' ',' ','_','_',' ','\\',' ','\\',' ',' ',' ','/',' ','/'},
    {' ','\\',' ','\\','_','/',' ','|',' ','|',' ',' ','|',' ','|',' ','|',' ',' ','|',' ','|',' ','(','_','_','_',' ','|',' ','|','_','_',' ',' ','|',' ','|','_','_',' ',' ',' ',' ','/',' ',' ','\\',' ',' ','|',' ','|',' ',' ',' ',' ','|',' ','\'',' ',' / ',' ',' ',' ',' / ',' ',' ','\\',' ',' ',' | ',' ',' | ',' ',' ',' | ',' ','\\',' ','\\','_',' / ',' ','/',' '},
    {' ',' ','\\',' ',' ',' ','/','|',' ','|',' ',' ','|',' ','|',' ','|',' ',' ','|',' ','|','\\','_','_','_',' ','\\','|',' ',' ','_','_','|',' ','|',' ',' ','_','_','|',' ',' ','/',' ','/','\\',' ','\\',' ','|',' ','|',' ',' ',' ',' ','|',' ',' ','<',' ',' ',' ','/',' ','/','\\',' ','\\',' ','|',' ','|',' ',' ','|',' ','|','\\',' ',' ',' ','/',' ',' '},
    {' ',' ',' ','|',' ','|',' ','|',' ','|','_','_','|',' ','|',' ','|','_','_','|',' ','|','_','_','_','_',')',' ','|',' ','|','_','_','_','_','|',' ','|',' ',' ',' ',' ','/',' ','_','_','_','_',' ','\\','|',' ','|','_','_','_','_','|',' ','.',' ','\\',' ','/',' ','_','_','_','_',' ','\\','|',' ','|','_','_','|',' ','|',' ','|',' ','|',' ',' ',' '},
    {' ',' ',' ','|','_','|',' ',' ','\\','_','_','_','_','/',' ','\\','_','_','_','_','/','|','_','_','_','_','_','/','|','_','_','_','_','_','_','|','_','|',' ',' ',' ','/','_','/',' ',' ',' ',' ','\\','_','|','_','_','_','_','_','_','|','_','|','\\','_','/','_','/',' ',' ',' ',' ','\\','_','|','_','_','_','_','_','/',' ',' ','|','_','|',' ',' ',' '}
    };
    for (int r = 0; r < 18; r++) {
        for (int c = 0; c < 86; c++) {
            if (rText + r < 80 && cText + c < 120)
                screenArray[rText + r][cText + c] = Names[r][c];
        }
    }

}
void NameTag(char screenArray[1000][1000], int rr, int cc)
{
    char nameTag[1][6] = {
        {'S','p','r','i','t','e'}
    };
    for (int r = 0; r < 1; r++) {
        for (int c = 0; c < 6; c++) {
            if (rr + r < 80 && cc + c < 120)
                screenArray[rr + r][cc + c] = nameTag[r][c];
        }
    }
}
void Comment(char screenArray[1000][1000], int rComment, int cComment)
{
    char Comment[6][24] =
    {
        {' ',' ','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_',' ',' '},
        {' ','/',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','\\',' '},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
        {'/',' ','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','/',' '},
        {'\\','/',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
    };
    for (int r = 0; r < 6; r++) {
        for (int c = 0; c < 24; c++) {
            if (rComment + r < 80 && cComment + c < 120)
                screenArray[rComment + r][cComment + c] = Comment[r][c];
        }
    }

}
void WhereAmI(char screenArray[1000][1000], int rWhere, int cWhere) {
    char WhereAmI[1][11] =
    {
        {'W','h','e','r','e',' ','A','m',' ','I','!'}
    };
    for (int r = 0; r < 1; r++) {
        for (int c = 0; c < 11; c++) {
            if (rWhere + r < 80 && cWhere + c < 120)
                screenArray[rWhere + r][cWhere + c] = WhereAmI[r][c];
        }
    }
}
void Dream(char screenArray[1000][1000], int rWhere, int cWhere) {
    char WhereAmI[1][19] =
    {
        {'I','t',' ','W','a','s',' ','A','l','l',' ','A',' ','D','r','e','a','m','?'}
    };
    for (int r = 0; r < 1; r++) {
        for (int c = 0; c < 19; c++) {
            if (rWhere + r < 80 && cWhere + c < 120)
                screenArray[rWhere + r][cWhere + c] = WhereAmI[r][c];
        }
    }
}
void Where(char screenArray[1000][1000], int rText, int cText) {
    char where[] = { 'W','h','a','t',' ','I','s',' ','T','h','i','s',' ','P','o','r','t','a','l','?' };
    for (int c = 0; c < 20; c++) {
        if (rText < 1000 && cText + c < 1000) {
            screenArray[rText][cText + c] = where[c];
        }
    }
}
void blank(char screenArray[1000][1000], int rWhere, int cWhere)
{
    char Blank[4][7] = {
    {' ',' ',' ',' ',' ',' ',' '},
    {' ',' ',' ',' ',' ',' ',' '},
    {' ',' ',' ',' ',' ',' ',' '},
    {' ',' ',' ',' ',' ',' ',' '},
    };
    for (int r = 0; r < 4; r++) {
        for (int c = 0; c < 7; c++) {
            if (rWhere + r < 80 && cWhere + c < 120)
                screenArray[rWhere + r][cWhere + c] = Blank[r][c];
        }
    }
}
void AnswerBox(char screenArray[1000][1000], int rBox, int cBox)
{
    char Box[6][33] = {
        {' ','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_',' '},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
        {'|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|'},
    };
    for (int r = 0; r < 6; r++) {
        for (int c = 0; c < 33; c++) {
            if (rBox + r < 80 && cBox + c < 120)
                screenArray[rBox + r][cBox + c] = Box[r][c];
        }
    }
}

//Hero
Size DrawSmallHero(char screenArray[1000][1000], int RH, int CH) {
    char SMALL_HERO[5][5] = {
    {' ','_','_','_',' ' },
    {'/','.','_','.','\\'},
    {'\\','_','_','_','/'},
    {' ','/','|','\\',' '},
    {' ','/',' ','\\',' '}
    };
    for (int r = 0; r < 5; r++) {
        for (int c = 0; c < 5; c++) {
            char ch = SMALL_HERO[r][c];
            int R = RH + r;
            int C = CH + c;
            if (ch != ' ' && R >= 0 && R < 80 && C >= 0 && C < 120)
                screenArray[R][C] = ch;
        }
    }
    return { 5, 5 };
}
void DrawHerod(char screenArray[1000][1000], int RH, int CH) {
    char Hero[12][11] = {
        {' ', ' ', ' ', '_', '_', '_', '_', '_', ' ', ' ', ' '},
        {' ', ' ', '/', '/', '/', '-', '\\', '\\', '\\', ' ', ' '},
        {' ', ' ', '|', '-', ' ', ' ', ' ', '-', '|', ' ', ' '},
        {' ', ' ', '|', 'O', ' ', '_', ' ', 'O', '|', ' ', ' '},
        {' ', ' ', ' ', '\\', '_', '_', '_', '/', ' ', ' ', ' '},
        {' ', ' ', ' ', ' ', '|', '_', '|', ' ', ' ', ' ', ' '},
        {' ', ' ', '/', '|', ' ', ' ', ' ', '|', '\\', ' ', ' '},
        {' ', '/', ' ', '|', ')', ' ', '(', '|', ' ','\\', ' '},
        {'O', ' ', ' ', '|', '_', '_', '_', '|', ' ', ' ', 'O'},
        {' ', ' ', ' ', ' ', '|', ' ', '\\', ' ', ' ', ' ', ' '},
        {' ', ' ', ' ', ' ', '|', ' ', ' ', '\\', ' ', ' ', ' '},
        {' ', ' ', ' ', ' ', 'O', ' ', ' ', ' ', 'O', ' ', ' '}
    };

    for (int r = 0; r < 12; r++) {
        for (int c = 0; c < 11; c++) {
            char ch = Hero[r][c];
            int R = RH + r;
            int C = CH + c;
            if (ch != ' ' && R >= 0 && R < 1000 && C >= 0 && C < 1000)
                screenArray[R][C] = ch;
        }
    }
}
void DrawHerow(char screenArray[1000][1000], int RH, int CH) {
    char Hero[12][11] = {
        {' ', ' ', ' ', '_', '_', '_', '_', '_', ' ', ' ', ' '},
        {' ', ' ', '/', '/', '/', '-', '\\', '\\', '\\', ' ', ' '},
        {' ', ' ', '|', '-', ' ', ' ', ' ', '-', '|', ' ', ' '},
        {' ', ' ', '|', 'O', ' ', '_', ' ', 'O', '|', ' ', ' '},
        {' ', ' ', ' ', '\\', '_', '_', '_', '/', ' ', ' ', ' '},
        {' ', ' ', ' ', ' ', '|', '_', '|', ' ', ' ', ' ', ' '},
        {' ', ' ', '/', '|', ' ', ' ', ' ', '|', '\\', ' ', ' '},
        {' ', '/', ' ', '|', ')', ' ', '(', '|', ' ', '\\', ' '},
        {'O', ' ', ' ', '|', '_', '_', '_', '|', ' ', ' ', 'O'},
        {' ', ' ', ' ', ' ', '/', ' ', '|', ' ', ' ', ' ', ' '},
        {' ', ' ', ' ', '/', ' ', ' ', '|', ' ', ' ', ' ', ' '},
        {' ', ' ', 'O', ' ', ' ', ' ', 'O', ' ', ' ', ' ', ' '}
    };

    for (int r = 0; r < 12; r++) {
        for (int c = 0; c < 11; c++) {
            char ch = Hero[r][c];
            int R = RH + r;
            int C = CH + c;
            if (ch != ' ' && R >= 0 && R < 1000 && C >= 0 && C < 1000)
                screenArray[R][C] = ch;
        }
    }
}
void DrawHeroGunLeft(char screenArray[1000][1000], int RH, int CH) {
    char HeroGun[12][18] = {
        {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '_', '_', '_', '_', '_', ' ',' '},
        {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '/', '/', '/', '-', '\\', '\\', '\\',' '},
        {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|', '-', ' ', ' ', ' ', '-', '|',' '},
        {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|', 'O', ' ', '_', ' ', 'O', '|',' '},
        {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '\\', '_', '_', '_', '/', ' ',' '},
        {' ', ' ', ' ', ' ', ' ' , ' ' , ' ', ' ', ' ', ' ', '|', '_', '|', ' ', ' ',' ','O',' '},
        {' ','_','_','_', ' ', ' ', ' ', ' '  , ' ', '|', ' ', ' ', ' ', '|', ' ', '/', ' ', ' '},
        {'[','_','_','_', 'L', ' ', ' ' , ' ', '/', '|', ')', ' ', '(', '|', '/', ' ', ' ', ' '},
        {' ',' ',' ',' ', ')', '\\','_', '/', ' ', '|', '_', '_', '_', '|', ' ', ' ', ' ',' '},
        {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|', ' ', '|', ' ', ' ', ' ', ' ',' '},
        {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|', ' ', '|', ' ', ' ', ' ', ' ',' '},
        {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'O', ' ', 'O', ' ', ' ', ' ', ' ',' '}
    };

    for (int r = 0; r < 12; r++) {
        for (int c = 0; c < 18; c++) {
            if (RH + r < 1000 && CH + c < 1000) {
                screenArray[RH + r][CH + c] = HeroGun[r][c];
            }
        }
    }
}
Size DrawHeroGunRight(char screenArray[1000][1000], int RH, int CH) {
    char HERO_GUN_RIGHT[12][17] = {
    {'@', '@', ' ', '_', '_', '_', '_', '_', '@', '@', '@','@','@','@', '@', '@', '@'},
    {'@', '@', '/', '/', '/', '-', '\\', '\\', '\\', '@', '@','@','@','@', '@', '@', '@'},
    {'@', '@', '|', '-', ' ', ' ', ' ', '-', '|', '@', '@','@','@','@','@','@','@'},
    {'@', '@', '|', 'O', ' ', '_', ' ', 'O', '|', '@', '@','@','@','@', '@', '@', '@'},
    {'O', '@', '@', '\\', '_', '_', '_', '/', '@', '@', '@','@','@', '@', '@', '@', '@'},
    {'@', '\\', ' ', ' ', '|', '_', '|', '@', '@', '@', '@','@','@' ,'_', '_','_', '@'},
    {'@', '@', '\\', '|', ' ', ' ', ' ', '|', '\\', '@', '@','@','L', '_', '_','_', ']'},
    {'@', '@', '@', '|', ')', ' ', '(', '|', '@', '\\', '_','/', '(', '@', '@', '@', '@'},
    {'@', '@', '@', '|', '_', '_', '_', '|', '@', '@', '@','@','@','@','@', '@','@'},
    {'@', '@', '@', '@', '|', '@', '|', '@', '@', '@', '@','@','@','@','@', '@','@'},
    {'@', '@', '@', '@', '|', '@', '|', '@', '@', '@', '@','@','@','@','@', '@','@'},
    {'@', '@', '@', '@', 'O', '@', 'O', '@', '@', '@', '@','@','@','@','@', '@', '@'}
    };
    for (int r = 0; r < 12; r++) {
        for (int c = 0; c < 17; c++) {
            char ch = HERO_GUN_RIGHT[r][c];
            int R = RH + r;
            int C = CH + c;
            if (ch != '@' && R >= 0 && R < 80 && C >= 0 && C < 120)
                screenArray[R][C] = ch;
        }
    }
    return { 12, 17 };
}
Size DrawHero(char screenArray[1000][1000], int RH, int CH) {
    char HERO[12][11] = {
    {' ', ' ', ' ', '_', '_', '_', '_', '_', ' ', ' ', ' '},
    {' ', ' ', '/', '/', '/', '-', '\\', '\\', '\\', ' ', ' '},
    {' ', ' ', '|', '-', ' ', ' ', ' ', '-', '|', ' ', ' '},
    {' ', ' ', '|', 'O', ' ', '_', ' ', 'O', '|', ' ', ' '},
    {' ', ' ', ' ', '\\', '_', '_', '_', '/', ' ', ' ', ' '},
    {' ', ' ', ' ', ' ', '|', '_', '|', ' ', ' ', ' ', ' '},
    {' ', ' ', '/', '|', ' ', ' ', ' ', '|', '\\', ' ', ' '},
    {' ', '/', ' ', '|', ')', ' ', '(', '|', ' ', '\\', ' '},
    {'O', ' ', ' ', '|', '_', '_', '_', '|', ' ', ' ', 'O'},
    {' ', ' ', ' ', ' ', '|', ' ', '|', ' ', ' ', ' ', ' '},
    {' ', ' ', ' ', ' ', '|', ' ', '|', ' ', ' ', ' ', ' '},
    {' ', ' ', ' ', ' ', 'O', ' ', 'O', ' ', ' ', ' ', ' '}
    };
    for (int r = 0; r < 12; r++) {
        for (int c = 0; c < 11; c++) {
            char ch = HERO[r][c];
            int R = RH + r;
            int C = CH + c;
            if (ch != ' ' && R >= 0 && R < 1000 && C >= 0 && C < 1000)
                screenArray[R][C] = ch;
        }
    }
    return { 12, 11 };
}
Size DrawHeroKey(char screenArray[1000][1000], int RH, int CH) {
    char HERO_KEY[12][12] = {
    {' ', ' ', ' ', '_', '_', '_', '_', '_', ' ', ' ', ' ',' '},
    {' ', ' ', '/', '/', '/', '-', '\\', '\\', '\\', ' ', ' ',' '},
    {' ', ' ', '|', '-', ' ', ' ', ' ', '-', '|', ' ', ' ',' '},
    {' ', ' ', '|', 'O', ' ', '_', ' ', 'O', '|', ' ', ' ',' '},
    {' ', ' ', ' ', '\\', '_', '_', '_', '/', ' ', ' ', ' ',' '},
    {' ', ' ', ' ', ' ', '|', '_', '|', ' ', ' ', ' ', ' ',' '},
    {' ', ' ', '/', '|', ' ', ' ', ' ', '|', '\\', ' ', ' ', ' '},
    {' ', '/', ' ', '|', ')', ' ', '(', '|', ' ', 'O', '=','='},
    {'O', ' ', ' ', '|', '_', '_', '_', '|', ' ', ' ', ' ',' '},
    {' ', ' ', ' ', ' ', '|', ' ', '|', ' ', ' ', ' ', ' ',' '},
    {' ', ' ', ' ', ' ', '|', ' ', '|', ' ', ' ', ' ', ' ',' '},
    {' ', ' ', ' ', ' ', 'O', ' ', 'O', ' ', ' ', ' ', ' ',' '}
    };

    for (int r = 0; r < 12; r++) {
        for (int c = 0; c < 12; c++) {
            char ch = HERO_KEY[r][c];
            int R = RH + r;
            int C = CH + c;
            if (ch != ' ' && R >= 0 && R < 80 && C >= 0 && C < 120)
                screenArray[R][C] = ch;
        }
    }
    return { 12, 12 };
}
Size DrawHeroKeyw(char screenArray[1000][1000], int RH, int CH) {
    char HERO_KEY[12][12] = {
    {' ', ' ', ' ', '_', '_', '_', '_', '_', ' ', ' ', ' ',' '},
    {' ', ' ', '/', '/', '/', '-', '\\', '\\', '\\', ' ', ' ',' '},
    {' ', ' ', '|', '-', ' ', ' ', ' ', '-', '|', ' ', ' ',' '},
    {' ', ' ', '|', 'O', ' ', '_', ' ', 'O', '|', ' ', ' ',' '},
    {' ', ' ', ' ', '\\', '_', '_', '_', '/', ' ', ' ', ' ',' '},
    {' ', ' ', ' ', ' ', '|', '_', '|', ' ', ' ', ' ', ' ',' '},
    {' ', ' ', '/', '|', ' ', ' ', ' ', '|', '\\', ' ', ' ', ' '},
    {' ', '/', ' ', '|', ')', ' ', '(', '|', ' ', 'O', '=','='},
    {'O', ' ', ' ', '|', '_', '_', '_', '|', ' ', ' ', ' ',' '},
    {' ', ' ', ' ', ' ', '/', ' ', '|', ' ', ' ', ' ', ' ',' '},
    {' ', ' ', ' ', '/', ' ', ' ', '|', ' ', ' ', ' ', ' ',' '},
    {' ', ' ', 'O', ' ', ' ', ' ', 'O', ' ', ' ', ' ', ' ',' '}
    };

    for (int r = 0; r < 12; r++) {
        for (int c = 0; c < 12; c++) {
            char ch = HERO_KEY[r][c];
            int R = RH + r;
            int C = CH + c;
            if (ch != ' ' && R >= 0 && R < 80 && C >= 0 && C < 120)
                screenArray[R][C] = ch;
        }
    }
    return { 12, 12 };
}
Size DrawHeroKeyd(char screenArray[1000][1000], int RH, int CH) {
    char HERO_KEY[12][12] = {
    {' ', ' ', ' ', '_', '_', '_', '_', '_', ' ', ' ', ' ',' '},
    {' ', ' ', '/', '/', '/', '-', '\\', '\\', '\\', ' ', ' ',' '},
    {' ', ' ', '|', '-', ' ', ' ', ' ', '-', '|', ' ', ' ',' '},
    {' ', ' ', '|', 'O', ' ', '_', ' ', 'O', '|', ' ', ' ',' '},
    {' ', ' ', ' ', '\\', '_', '_', '_', '/', ' ', ' ', ' ',' '},
    {' ', ' ', ' ', ' ', '|', '_', '|', ' ', ' ', ' ', ' ',' '},
    {' ', ' ', '/', '|', ' ', ' ', ' ', '|', '\\', ' ', ' ', ' '},
    {' ', '/', ' ', '|', ')', ' ', '(', '|', ' ', 'O', '=','='},
    {'O', ' ', ' ', '|', '_', '_', '_', '|', ' ', ' ', ' ',' '},
    {' ', ' ', ' ', ' ', '|', ' ', '\\', ' ', ' ', ' ', ' ',' '},
    {' ', ' ', ' ', ' ', '|', ' ', ' ', '\\', ' ', ' ', ' ',' '},
    {' ', ' ', ' ', ' ', 'O', ' ', ' ', ' ', 'O', ' ', ' ',' '}
    };

    for (int r = 0; r < 12; r++) {
        for (int c = 0; c < 12; c++) {
            char ch = HERO_KEY[r][c];
            int R = RH + r;
            int C = CH + c;
            if (ch != ' ' && R >= 0 && R < 80 && C >= 0 && C < 120)
                screenArray[R][C] = ch;
        }
    }
    return { 12, 12 };
}
void SleepySprite(char ScreenArray[1000][1000], int rBed, int cBed)
{
    char sleepingSprite[7][7] = {
     {' ','_','_','_','_','_',' '},
     {'/','/','/','-','\\','\\','\\'},
     {'|','-',' ',' ',' ','-','|'},
     {'|','-','-',' ','-','-','|'},
     {'|',' ',' ','-',' ',' ','|'},
     {' ','\\','_','_','_','/',' '},
     {' ',' ',' ','\\',' ','\\',' '},
    };
    for (int r = 0; r < 7; r++) {
        for (int c = 0; c < 7; c++) {
            if (rBed + r < 1000 && cBed + c < 1000) {
                ScreenArray[rBed + r][cBed + c] = sleepingSprite[r][c];
            }
        }
    }
}
void wakySprite(char ScreenArray[1000][1000], int rBed, int cBed)
{
    char wakySprite[7][7] = {
    {' ','_','_','_','_','_',' '},
    {'/','/','/','-','\\','\\','\\'},
    {'|','-',' ',' ',' ','-','|'},
    {'|','O',' ',' ',' ','O','|'},
    {'|',' ',' ','-',' ',' ','|'},
    {' ','\\','_','_','_','/',' '},
    {' ',' ',' ','\\',' ','\\',' '},
    };
    for (int r = 0; r < 7; r++) {
        for (int c = 0; c < 7; c++) {
            if (rBed + r < 1000 && cBed + c < 1000) {
                ScreenArray[rBed + r][cBed + c] = wakySprite[r][c];
            }
        }
    }
}
void wakywakySprite(char ScreenArray[1000][1000], int rBed, int cBed)
{
    char wakySprite[9][11] =
    {
    {'@', '@', '@', '_', '_', '_', '_', '_', '@', '@','@'},
    {'@', '@', '/', '/', '/', '-', '\\', '\\', '\\', '@','@'},
    {'@', '@', '|', '-', ' ', ' ', ' ', '-', '|', '@','@'},
    {'@', '@', '|', 'O', ' ', '_', ' ', 'O', '|', '@','@'},
    {'@', '@', '@', '\\', '_', '_', '_', '/', '@', '@','@'},
    {'@', '@', '@', '@', '|', '_', '|', ' ', '@', '@','@'},
    {'@', '@', '/', '|', ' ', ' ', ' ', '|', '\\','@','@'},
    {'@', '/', '@', '@', '@', '@', '@', '@', '@', '\\','@'},
    {'/', '@', '@', '@', '@', '@', '@', '@', '@', '@','\\'},
    };
    for (int r = 0; r < 9; r++) {
        for (int c = 0; c < 11; c++) {
            char ch = wakySprite[r][c];
            int R = rBed + r;
            int C = cBed + c;
            if (ch != '@' && R >= 0 && R < 80 && C >= 0 && C < 120)
                ScreenArray[R][C] = ch;
        }
    }
}
void DrawHeroAxe(char screenArray[1000][1000], int RH, int CH) {
    char Hero[12][16] = {
        {' ', ' ', ' ', '_', '_', '_', '_', '_', ' ', ' ', ' '  , ' ', ' ', ' ', ' ' , ' '  },
        {' ', ' ', '/', '/', '/', '-', '\\', '\\', '\\', ' ',' ', ' ', ' ', ' ', ' ' , ' '  },
        {' ', ' ', '|', '-', ' ', ' ', ' ', '-', '|', ' ', ' '  , ' ', ' ', ' ', ' ' , ' '  },
        {' ', ' ', '|', 'O', ' ', '_', ' ', 'O', '|', ' ', ' '  , ' ', ' ', ' ', ' ' , ' '  },
        {' ', ' ', ' ', '\\', '_', '_', '_', '/', ' ', ' ', ' ' , ' ', ' ', ' ', ' ' , ' '  },
        {' ', ' ', ' ', ' ', '|', '_', '|', ' ', ' ', ' ', ' '  , ' ', ' ', ' ', ' ' , ' '  },
        {' ', ' ', '/', '|', ' ', ' ', ' ', '|', '\\', ' ', ' ' , ' ', ' ', '_', '/' , '|'  },
        {' ', '/', ' ', '|', ')', ' ', '(', '|', ' ', '\\', ' ' , '|', '|', '_', '|' , '|'  },
        {'O', ' ', ' ', '|', '_', '_', '_', '|', ' ', ' ', '-'  , '|', '|', ' ', '\\', '|'  },
        {' ', ' ', ' ', ' ', '|', ' ', '|', ' ', ' ', ' ', ' '  , '|', '|', ' ', ' ' , ' '  },
        {' ', ' ', ' ', ' ', '|', ' ', '|', ' ', ' ', ' ', ' '  , ' ', ' ', ' ', ' ' , ' '  },
        {' ', ' ', ' ', ' ', 'O', ' ', 'O', ' ', ' ', ' ', ' '  , ' ', ' ', ' ', ' ' , ' '  }
    };


    for (int r = 0; r < 12; r++) {
        for (int c = 0; c < 16; c++) {
            char ch = Hero[r][c];
            int R = RH + r;
            int C = CH + c;
            if (ch != ' ' && R >= 0 && R < 1000 && C >= 0 && C < 1000)
                screenArray[R][C] = ch;
        }
    }
}


//Rooms
void DrawFrogRoom(char screenArray[1000][1000], int rGhost, int cGhost) {
    char FrogRoom[83][125] = {

        {'_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_'},
        {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {' ',' ',' ','_',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {' ',' ','/',' ','\\',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {' ',' ','|',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {},
        {' ',' ','|','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {' ',' ','|','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {' ',' ','|','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {'_','_','_','_','_','_','_','_','_',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {'_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_'},
        {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {'_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_'},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {'|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {'|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {'|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {'|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {'|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {'|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {'|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','_','_','_','_','_','_','_','_',' ',' ',' ',' ',' ',' ',' '},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','/','_','_','_','_','_','_','_','/','|',' ',' ',' ',' ',' ',' '},
        {'|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ','_',' ',' ',' ','|','|',' ',' ',' ',' ',' ',' '},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ','|','|',' ',' ',' ',' ',' ',' '},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','_','_','_','_','_','_','_','|','/',' ',' ',' ',' ',' ',' '},
        {'|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_'}
    };

    for (int r = 0; r < 83; r++) {
        for (int c = 0; c < 125; c++) {
            {
                if (r < 1000 && c < 1000) {
                    screenArray[r][c] = FrogRoom[r][c];
                }
            }
        }
    }
}
void DrawStartScreenPac(char screenArray[1000][1000])
{
    system("color 4");
    char startScreen[29][120] =
    {
        {'=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','='},
        {'|','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','|'},
        {'|','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','|'},
        {'|','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','|'},
        {'|','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','|'},
        {'|','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','|'},
        {'|','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','|'},
        {'|','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','|'},
        {'|','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','|'},
        {'|','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','|'},
        {'|','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','|'},
        {'|','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','|'},
        {'|','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','|'},
        {'|','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','|'},
        {'|','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','|'},
        {'|','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','|'},
        {'|','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','|'},
        {'|','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','|'},
        {'|','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','|'},
        {'|','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','|'},
        {'|','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','|'},
        {'|','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','|'},
        {'|','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','|'},
        {'|','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','|'},
        {'|','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','|'},
        {'|','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','|'},
        {'|','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','|'},
        {'|','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','|'},
        {'=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','='},
    };
    for (int r = 0; r < 29; r++) {
        for (int c = 0; c < 120; c++) {

            if (r < 1000 && c < 1000) {
                screenArray[r][c] = startScreen[r][c];
            }
        }
    }
}
void DrawStartScreen(char screenArray[1000][1000])
{
    char startScreen[29][120] =
    {
        {'=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','='},
        {'|','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','|'},
        {'|','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','|'},
        {'|','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','|'},
        {'|','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','|'},
        {'|','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','|'},
        {'|','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','|'},
        {'|','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','|'},
        {'|','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','|'},
        {'|','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','|'},
        {'|','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','|'},
        {'|','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','|'},
        {'|','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','|'},
        {'|','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','|'},
        {'|','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','|'},
        {'|','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','|'},
        {'|','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','|'},
        {'|','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','|'},
        {'|','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','|'},
        {'|','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','|'},
        {'|','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','|'},
        {'|','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','|'},
        {'|','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','|'},
        {'|','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','|'},
        {'|','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','|'},
        {'|','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','|'},
        {'|','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','|'},
        {'|','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','|'},
        {'=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','=','='},
    };
    for (int r = 0; r < 29; r++) {
        for (int c = 0; c < 120; c++) {

            if (r < 1000 && c < 1000 && startScreen[r][c] != ' ') {
                screenArray[r][c] = startScreen[r][c];
            }
        }
    }
}
void DrawRobotRoom(char screenArray[1000][1000], int rGhost, int cGhost) {
    char ghost[30][120] = {
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
        {'|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|'},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
        {'|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|'},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
        {'|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|'},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
        {'|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|'},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
        {'|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|'},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
        {'|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|'},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
        {'|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|'},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
        {'|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|'},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
        {'|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|'},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
        {'|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|'}
    };

    for (int r = 0; r < 30; r++) {
        for (int c = 0; c < 120; c++) {
            if (rGhost + r < 1000 && cGhost + c < 1000) {
                screenArray[rGhost + r][cGhost + c] = ghost[r][c];
            }
        }
    }
}
void DrawHouse(char screenArray[1000][1000], int rHouse, int cHouse) {
    char House[29][37] = {

        {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ')', ' ', ' ', ' ' , ' ', ' ', ' ',' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '},
        {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '(', ' ', ' ', ' ', ' ' , ' ', ' ', ' ',' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '},
        {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ')', ' ', ' ' , ' ', ' ', ' ',' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '},
        {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '_', '_', '_', '_', '_', ' ' , ' ', ' ', ' ',' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '},
        {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '[', ' ', ' ', ' ', ' ', ' ', ']' , ' ', ' ', ' ',' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '},
        {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|', ' ', ' ', ' ', '|', ' ' , ' ', ' ', ' ',' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '},
        {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '_', '_', '_', '_', '_', '_', '_', '_', '_', '_', '_', '|', ' ', ' ', ' ', '|', '_' , '_', '_', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '},
        { ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '/', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|', ' ', ' ', ' ', '|', ' ' , ' ', ' ', '\\', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '},
        {' ', ' ', ' ', ' ', ' ', ' ', ' ', '/', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ' , ' ', ' ', ' ', '\\', ' ', ' ', ' ', ' ', ' ', ' ', ' '},
        {' ', ' ', ' ', ' ', ' ', ' ', '/', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '\\', ' ', ' ', ' ', ' ', ' ', ' '},
        {' ', ' ', ' ', ' ', ' ', '/', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '\\', ' ', ' ', ' ', ' ', ' '},
        {' ', ' ', ' ', ' ', '/', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '\\', ' ', ' ', ' ', ' '},
        {' ', ' ', ' ', '/', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '\\', ' ', ' ', ' '},
        {' ', '_', '-', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '-', '_', ' '},
        {'/', '_', '_', '_', '_', '_', '_', '_', '_', '_', '_', '_', '_', '_', '_', '_', '_', '_', '_', '_', '_', '_', '_', '_', '_', '_', '_', '_', '_', '_', '_', '_', '_', '_', '_', '_', '\\'},
        { ' ', ' ', ' ', '|', ' ', ' ', ' ',' ', '_', '_', '_', '_', '_', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' ', '_', '_', '_', '_', '_', ' ', ' ', ' ', ' ', ' ', '|', ' ', ' '},
        {' ', ' ', ' ', '|', ' ', ' ', ' ','|', ' ', ' ', '|', ' ', ' ', '|', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ','|', ' ', ' ', '|', ' ', ' ', '|', ' ', ' ', ' ', ' ', '|',' ', ' '},
        {' ', ' ', ' ', '|', ' ', ' ', ' ','|', '-', '-', '+', '-', '-', '|', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ','|', '-', '-', '+', '-', '-', '|', ' ', ' ', ' ', ' ', '|',' ', ' '},
        {' ', ' ', ' ', '|', ' ', ' ', ' ','|', '_', '_', '|', '_', '_', '|', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ','|', '_', '_', '|', '_', '_', '|', ' ', ' ', ' ', ' ', '|',' ', ' '},
        {' ', ' ', ' ', '|', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' ','|',' ', ' '},
        {' ', ' ', ' ', '|', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '_', '_', '_', '_', '_', '_',  '_', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' ',' ','|', ' ', ' '},
        {' ', ' ', ' ', '|', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' ',' ', '|', ' ', ' '},
        {' ', ' ', ' ', '|', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' ',' ', '|', ' ', ' '},
        {' ', ' ', ' ', '|', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' ',' ', '|', ' ', ' '},
        {' ', ' ', ' ', '|', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|', ' ', ' ', ' ', ' ', ' ', ' ', '@', '|', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' ',' ', '|', ' ', ' '},
        {' ', ' ', ' ', '|', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' ',' ', '|', ' ', ' '},
        {' ', ' ', ' ', '|', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' ',' ', '|', ' ', ' '},
        {' ', ' ', ' ', '|', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' ',' ', '|', ' ', ' '},
        {' ', ' ', ' ', '-', '_','_', '_', '_','_', '_', '_', '_', '_', '_', '_', '_', '_', '_', '_', '_', '_', '_', '_', '_', '_', '_', '_', '_', '_', '_', '_', '_', '_', '_', '-', ' ', ' '}
    };

    for (int r = 0; r < 29; r++) {
        for (int c = 0; c < 37; c++) {
            if (rHouse + r < 1000 && cHouse + c < 1000) {
                screenArray[rHouse + r][cHouse + c] = House[r][c];
            }
        }
    }
}
void DrawRoom(char screenArray[1000][1000]) {
    char HouseScene[23][120] = {
{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','|','_','_','|','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',},
{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','_','_','|','|','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '},
{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','.','.','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|','|','_','_','|','|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','.','.', ' ', ' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','.',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','[','H','o','m','e',' ','s','w','e','e','t',' ','H','o','m','e',']',' ',' ',' ',' ',' ','|','_','_','|','|','|',' ',' ',' ',' ','.','_','_','_','_','.',' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|', ' ', ' ', ' ', ' ', ' ', '|', ' ', ' ',' ','|',' ','.', ' ', ' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','.',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','.','_','_','_','_','_','_','_','_','.',' ',' ',' ',' ',' ',' ',' ','|','|','_','_','|','|',' ',' ',' ',' ','|','/','\\','\\','*','|',' ',' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|', '_', '_', '_', '_', '_', '|', ' ', ' ', ' ','|',' ',' ','.',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','.',' ',' ',' ',' ','|',' ',' ',' ',' ',' ','w','w','w','w','w','w','w','w','w',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ','.','\'','|',' ',' ',' ',' ',' ',' ',' ','|','_','_','|','|','|',' ',' ',' ',' ','|','_','_','_','_','|',' ',' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|', ' ', ' ', ' ', ' ', ' ', '|', ' ', ' ', ' ','|',' ',' ',' ',' ','.',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','.',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ','|',')','_','_','|','_','_','(','|',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ','.','\'',' ',' ','|',' ',' ',' ',' ',' ','_','_','|','|','_','_','|','|','_','_','.',' ',' ',' ',' ',' ',' ',' ',' ',' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|', ' ', ' ', ' ', ' ', ' ', '|', ' ', ' ', ' ','|',' ',' ',' ',' ',' ','.',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','.',' ',' ',' ','1','/','|',' ','|',' ',' ',' ',' ',' ','|','\\','\\',' ','|',' ',' ','/','|',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ','|',' ',' ',' ','|',' ',' ',' ',' ','/','_','_','|','_','_','|','|','/','_','/','|',' ',' ',' ',' ',' ',' ',' ',' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|', '_', '_', '_', '_', '_','|', ' ', ' ',' ','|',' ',' ',' ',' ',' ',' ',' ','.',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
{' ',' ',' ',' ',' ',' ',' ',' ',' ','.',' ',' ',' ',' ','/',' ','|',' ','|',' ',' ',' ',' ',' ','\'','=','=','=','=','=','=','=','\'',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ','|',' ',' ',' ','|',' ',' ',' ',' ','|','_','.','_','_','_','_','_','.','_','|','|',' ',' ',' ',' ',' ',' ',' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|', ' ', ' ', ' ', ' ', ' ','|', ' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ','.',' ',' ',' ',' ',' ',' ',' ',' ',' '},
{' ',' ',' ',' ',' ',' ',' ','.',' ',' ',' ',' ',' ','|',' ',' ','|',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ','|','o',' ',' ','|',' ',' ',' ',' ','|','_','|','/','^','^','^','\\','|','_','|','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','_','_','_','_','_','|',' ',' ',' ','|',' ',' ',' ','|','\\','2',' ',' ',' ',' ','.',' ',' ',' ',' ',' ',' ',' '},
{' ',' ',' ',' ',' ',' ','.',' ',' ',' ',' ',' ',' ','|',' ',' ','|',' ','|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|','_','_','_','_','|',' ',' ',',','|','_','_','_','_','|','_','|','*','*','*','*','*','|','_','|','/','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|','_','_','_','_','_','|','_','_','_','|',' ',' ',' ','|',' ','\\',' ',' ',' ',' ',' ','.',' ',' ',' ',' ',' ',' '},
{' ',' ',' ',' ','.',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ','|','.',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',',',' ',' ',' ',' ',' ',' ','_','_','_','_','_','_','_','_','_','_','_','_',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','.',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','.',' ',' ','|',' ',' ','|',' ',' ',' ',' ',' ',' ','.',' ',' ',' ',' '},
{' ',' ',' ','.',' ',' ',' ',' ','.','_','.',' ',' ','|',' ',' ','.',' ',' ',' ',' ','_','_','_','_','_','_','_','_','_','_','.',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','.',' ',' ',' ',' ',' ','=','/',' ','o',' ',' ',' ',' ',' ',' ','o',' ',' ','/','=',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','\'',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','.',' ',' ','.',' ','|',' ',' ','|',' ',' ',' ',' ',' ',' ',' ','.',' ',' ',' '},
{' ','.',' ',' ',' ',' ',' ','/',' ','/','|',' ',' ','|',' ','.',' ',' ',' ',' ','/','_','/','-','-','-','-','-','/','_','/','|',' ',' ',' ','_','_',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','=','/',' ',' ',' ',' ','X',' ',' ','.',' ',' ',' ','/','=',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','.','|',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ','.',' '},
{'|',' ',' ',' ',' ',' ','/',' ','/','|','|',' ',' ','.',' ',' ',' ',' ',' ',' ','(',' ','(',' ',',',' ',',',' ','(',' ','(','|',' ','/','\'','-','-','\'','\\',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','=','/','_','_','_','_','_','_','_','_','_','_','_','/','=',' ',' ',' ',' ',' ','.',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','.',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
{'|',' ',' ',' ',' ','/','_','/','|','/','|',' ','.',' ',' ',' ',' ',' ',' ',' ','(','_','(',' ',',',' ',',',' ','(','_','(','|','/','.',' ',' ',' ',' ','.','\\',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','.',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
{'|',' ',' ',' ',' ','|','|','|','/','|','|',' ',' ',' ',' ',' ',' ',' ',' ',' ','/',' ','/','=','=','=','=','=','/',' ','/','|',' ',' ','\'','|','|','\'',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','.',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','.',' ',' ',' ',' ',' ',' ','.','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
{'|',' ',' ',' ',' ','|','|','/','|','/',' ',' ',' ',' ',' ',' ',' ',' ',' ','/','_','/','/','_','_','_','_','/','_','/',' ','|',' ',' ',' ','|','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ' ,' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','.',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','.',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
{'|',' ',' ',' ',' ','|','|','|','/',' ',' ',' ',' ',' ',' ',' ',' ',' ','(','o','|',':','.','.','.','.','.','|','o',')',' ','|',' ',' ',' ','|','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',',',' ',' ',' ',' ',' ' ,' ',',',' ',' ',' ',' ',' ',' ',' ',' ',' ','.','-','-','-','.',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','.',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
{'|',' ',' ',' ',' ','|','|','/',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','_','|',':','_','_','_','_','_','|','_','|','/','\'',' ',' ','_','|','|','_',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','/',' ',' ',' ',' ',' ',' ',' ','\\',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','\,',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','.',' ',' ',' ',' ',' ',' ',' ',' ','|'},
{'|',' ',' ',' ','.',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',',',' ',' ',' ',' ',' ',' ',' ',' ',',',' ',' ',' ',' ','/','_','_','_','_','\\','\\',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ','S','e','w','e','r',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','.',' ',' ',' ',' ',' ',' ','|'},
{'|',' ',' ','.',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','\\',' ',' ',' ',' ',' ',' ',' ','/',' ',' ' ,' ',' ',' ',' ',' ',' ',' ','\,',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','\'',' ',' ',' ',' ',' ',' ','.',' ',' ',' ',' ',' ','|'},
{'|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','\'','-','-','-','\'','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|'}
    };

    for (int r = 0; r < 23; r++) {
        for (int c = 0; c < 120; c++) {

            if (r < 1000 && c < 1000) {
                screenArray[r][c] = HouseScene[r][c];
            }
        }
    }
}
void DrawRoomPortal(char screenArray[1000][1000]) {
    char HouseScene[23][120] = {
{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','|','_','_','|','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',},
{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','_','_','|','|','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '},
{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','.','.','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|','|','_','_','|','|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','.','.', ' ', ' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','.',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','[','H','o','m','e',' ','s','w','e','e','t',' ','H','o','m','e',']',' ',' ',' ',' ',' ','|','_','_','|','|','|',' ',' ',' ',' ','.','_','_','_','_','.',' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '_', '_', '_', '_', '_', '_', '_', '_', ' ', ' ', ' ',' ','|',' ','.', ' ', ' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','.',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','.','_','_','_','_','_','_','_','_','.',' ',' ',' ',' ',' ',' ',' ','|','|','_','_','|','|',' ',' ',' ',' ','|','/','\\','\\','*','|',' ',' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|', '*', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|', ' ', ' ', ' ','|',' ',' ','.',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','.',' ',' ',' ',' ','|',' ',' ',' ',' ',' ','w','w','w','w','w','w','w','w','w',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ','.','\'','|',' ',' ',' ',' ',' ',' ',' ','|','_','_','|','|','|',' ',' ',' ',' ','|','_','_','_','_','|',' ',' ','P', 'O', 'R', 'T', 'A', 'L', ' ', 'H', 'A', 'S',' ',' ', ' ', '|', ' ', ',', ',', ' ', '*', ' ', ' ', '.', '|', ' ', ' ', ' ','|',' ',' ',' ',' ','.',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','.',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ','|',')','_','_','|','_','_','(','|',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ','.','\'',' ',' ','|',' ',' ',' ',' ',' ','_','_','|','|','_','_','|','|','_','_','.',' ',' ',' ',' ',' ',' ',' ',' ','B', 'E', 'E', 'N', ' ', 'U', 'N', 'L', 'O', 'U','C','K','E','D', '|', ' ', ' ', ' ', ' ', ' ', ' ', ',', ',', '|', ' ', ' ', ' ','|',' ',' ',' ',' ',' ','.',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','.',' ',' ',' ','1','/','|',' ','|',' ',' ',' ',' ',' ','|','\\','\\',' ','|',' ',' ','/','|',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ','|',' ',' ',' ','|',' ',' ',' ',' ','/','_','_','|','_','_','|','|','/','_','/','|',' ',' ',' ',' ',' ',' ',' ',' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|', ' ', ' ', ' ', '.', ' ', ' ', ' ', ' ','|', ' ', ' ',' ','|',' ',' ',' ',' ',' ',' ',' ','.',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
{' ',' ',' ',' ',' ',' ',' ',' ',' ','.',' ',' ',' ',' ','/',' ','|',' ','|',' ',' ',' ',' ',' ','\'','=','=','=','=','=','=','=','\'',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ','|',' ',' ',' ','|',' ',' ',' ',' ','|','_','.','_','_','_','_','_','.','_','|','|',' ',' ',' ',' ',' ',' ',' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|', '*', ' ', ' ', ' ', ' ', '*', ' ', ' ','|', ' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ','.',' ',' ',' ',' ',' ',' ',' ',' ',' '},
{' ',' ',' ',' ',' ',' ',' ','.',' ',' ',' ',' ',' ','|',' ',' ','|',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ','|','o',' ',' ','|',' ',' ',' ',' ','|','_','|','/','^','^','^','\\','|','_','|','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ','*',' ',' ',' ',' ','.','|',' ',' ',' ','|',' ',' ',' ','|','\\','2',' ',' ',' ',' ','.',' ',' ',' ',' ',' ',' ',' '},
{' ',' ',' ',' ',' ',' ','.',' ',' ',' ',' ',' ',' ','|',' ',' ','|',' ','|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|','_','_','_','_','|',' ',' ',',','|','_','_','_','_','|','_','|','*','*','*','*','*','|','_','|','/','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|','_','_','_','_','_','_','_','_','|','_','_','_','|',' ',' ',' ','|',' ','\\',' ',' ',' ',' ',' ','.',' ',' ',' ',' ',' ',' '},
{' ',' ',' ',' ','.',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ','|','.',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',',',' ',' ',' ',' ',' ',' ','_','_','_','_','_','_','_','_','_','_','_','_',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','.',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','.',' ',' ','|',' ',' ','|',' ',' ',' ',' ',' ',' ','.',' ',' ',' ',' '},
{' ',' ',' ','.',' ',' ',' ',' ','.','_','.',' ',' ','|',' ',' ','.',' ',' ',' ',' ','_','_','_','_','_','_','_','_','_','_','.',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','.',' ',' ',' ',' ',' ','=','/',' ','o',' ',' ',' ',' ',' ',' ','o',' ',' ','/','=',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','\'',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','.',' ',' ','.',' ','|',' ',' ','|',' ',' ',' ',' ',' ',' ',' ','.',' ',' ',' '},
{' ','.',' ',' ',' ',' ',' ','/',' ','/','|',' ',' ','|',' ','.',' ',' ',' ',' ','/','_','/','-','-','-','-','-','/','_','/','|',' ',' ',' ','_','_',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','=','/',' ',' ',' ',' ','X',' ',' ','.',' ',' ',' ','/','=',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','.','|',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ','.',' '},
{'|',' ',' ',' ',' ',' ','/',' ','/','|','|',' ',' ','.',' ',' ',' ',' ',' ',' ','(',' ','(',' ',',',' ',',',' ','(',' ','(','|',' ','/','\'','-','-','\'','\\',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','=','/','_','_','_','_','_','_','_','_','_','_','_','/','=',' ',' ',' ',' ',' ','.',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','.',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
{'|',' ',' ',' ',' ','/','_','/','|','/','|',' ','.',' ',' ',' ',' ',' ',' ',' ','(','_','(',' ',',',' ',',',' ','(','_','(','|','/','.',' ',' ',' ',' ','.','\\',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','.',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
{'|',' ',' ',' ',' ','|','|','|','/','|','|',' ',' ',' ',' ',' ',' ',' ',' ',' ','/',' ','/','=','=','=','=','=','/',' ','/','|',' ',' ','\'','|','|','\'',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','.',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','.',' ',' ',' ',' ',' ',' ','.','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
{'|',' ',' ',' ',' ','|','|','/','|','/',' ',' ',' ',' ',' ',' ',' ',' ',' ','/','_','/','/','_','_','_','_','/','_','/',' ','|',' ',' ',' ','|','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ' ,' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','.',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','.',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
{'|',' ',' ',' ',' ','|','|','|','/',' ',' ',' ',' ',' ',' ',' ',' ',' ','(','o','|',':','.','.','.','.','.','|','o',')',' ','|',' ',' ',' ','|','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',',',' ',' ',' ',' ',' ' ,' ',',',' ',' ',' ',' ',' ',' ',' ',' ',' ','.','-','-','-','.',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','.',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
{'|',' ',' ',' ',' ','|','|','/',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','_','|',':','_','_','_','_','_','|','_','|','/','\'',' ',' ','_','|','|','_',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','/',' ',' ',' ',' ',' ',' ',' ','\\',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','\,',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','.',' ',' ',' ',' ',' ',' ',' ',' ','|'},
{'|',' ',' ',' ','.',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',',',' ',' ',' ',' ',' ',' ',' ',' ',',',' ',' ',' ',' ','/','_','_','_','_','\\','\\',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ','S','e','w','e','r',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','.',' ',' ',' ',' ',' ',' ','|'},
{'|',' ',' ','.',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','\\',' ',' ',' ',' ',' ',' ',' ','/',' ',' ' ,' ',' ',' ',' ',' ',' ',' ','\,',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','\'',' ',' ',' ',' ',' ',' ','.',' ',' ',' ',' ',' ','|'},
{'|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','\'','-','-','-','\'','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|'}
    };

    for (int r = 0; r < 23; r++) {
        for (int c = 0; c < 120; c++) {

            if (r < 1000 && c < 1000) {
                screenArray[r][c] = HouseScene[r][c];
            }
        }
    }
}
Size PacmanMap(char ScreenArray[][1000], int rMap, int cMap)
{
    char PacmanMaze[81][210] = {

{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{'8','8','8','8','8','8','8','8','8','8','8','8','8','8','8','8','8','8','8',' ',' ',' ',' ',' ',' ',' ',' ','8','8','8','8','8','8','8','8','8','8','8','8',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','8','8','8','8','8','8','8','8','8','8','8',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','8','8','8','8','8','8','8','8','8','8','8','8','8','8','8','8',' ',' ',' ',' ',' ',' ',' ',' ','8','8','8','8','8','8','8','8','8','8','8','8',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','8','8','8','8','8','8','8','8','8','8','8',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','8','8','8','8','8'},
{},
{},
{},
{'8','8','8','8','8','8',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','8','8','8','8','8','8',' ',' ',' ',' ',' ',' ',' ','8','8','8','8','8','8',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','8','8','8','8','8','8','8',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','8','8','8','8','8','8',' ',' ',' ',' ',' ',' ',' ','8','8','8','8','8','8',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','8','8','8','8','8','8','8',' ',' ',' ',' ',' ',' ',' ','8','8','8','8','8'},
{},
{},
{},
{},
{'8','8','8','8','8','8',' ',' ',' ',' ',' ',' ',' ','8','8','8','8','8','8','8','8','8','8','8','8','8','8','8','8','8','8','8','8','8','8','8','8','8','8',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','8','8','8','8','8','8','8','8','8','8','8','8','8','8','8','8','8','8','8',' ',' ',' ',' ',' ',' ',' ','8','8','8','8','8','8','8','8','8','8','8',' ',' ',' ',' ',' ',' ','8','8','8','8','8','8','8',' ',' ',' ',' ',' ',' ',' ','8','8','8','8',' ',' ',' ',' ',' ',' ','8','8','8','8','8','8','8',' ',' ',' ',' ',' ',' ',' ','8','8','8','8','8','8','8','8','8','8','8','8',' ',' ',' ',' ',' ',' ',' ','8','8','8','8','8','8',' ',' ',' ',' ',' ',' ',' ','8','8','8','8','8','8',' ',' ',' ',' ',' ',' ',' ','8','8','8','8','8','8','8','8','8','8','8',' ',' ',' ',' ',' ','8','8','8','8','8','8','8',' ',' ',' ',' ',' ',' ',' ','8','8','8','8','8'},
{},
{},
{},
{},
{},
{},
{'8','8','8','8','8','8',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','8','8','8','8','8','8','8',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','8','8','8','8','8','8','8',' ',' ',' ',' ',' ',' ',' ','8','8','8','8',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','8','8','8','8','8','8','8','8','8','8','8','8','8','8','8','8','8','8','8'},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{'8','8','8','8','8','8',' ',' ',' ',' ',' ',' ',' ','8','8','8','8','8','8','8','8','8','8','8','8','8','8','8','8','8',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','8','8','8','8','8','8','8','8','8','8','8','8','8','8',' ',' ',' ',' ',' ',' ',' ',' ','8','8','8','8','8','8','8','8','8','8','8','8','8','8','8','8','8','8','8','8','8','8','8',' ',' ',' ',' ',' ',' ',' ','8','8','8','8','8','8','8',' ',' ',' ',' ',' ',' ',' ','8','8','8','8',' ',' ',' ',' ',' ',' ','8','8','8','8','8','8','8','8','8','8','8','8','8','8','8','8','8',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','8','8','8','8','8','8','8','8','8','8','8','8',' ',' ',' ',' ',' ',' ',' ','8','8','8','8','8','8','8','8','8','8','8','8','8','8','8','8','8','8','8','8','8','8','8','8','8','8','8','8','8','8','8','8','8','8','8','8',' ',' ',' ',' ',' ',' ',' ','8','8','8','8','8'},
{},
{},
{},
{},
{'8','8','8','8','8','8',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','8','8','8','8','8'},
{},
{},
{},
{},
{},
{},
{},
{'8','8','8','8','8','8',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','8','8','8','8','8','8',' ',' ',' ',' ',' ',' ',' ',' ','8','8','8','8','8',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','8','8','8','8','8','8','8',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','8','8','8','8','8','8',' ',' ',' ',' ',' ',' ',' ','8','8','8','8','8','8',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','8','8','8','8','8','8','8',' ',' ',' ',' ',' ',' ',' ','8','8','8','8','8'},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},

    };

    for (int r = 0; r < 81; r++) {
        for (int c = 0; c < 210; c++) {
            if (r < 1000 && c < 1000)
                ScreenArray[r][c] = PacmanMaze[r][c];
        }
    }
    rMap = 0; cMap = 0;
    return { rMap,cMap };
}
void Farouk(char screenArray[][1000], int rFarouk, int cFarouk)
{
    char Farouk[13][18] = {
        {' ',' ',' ','_','_','_','_','_',' ',' ',' ',' ',' ',' ',' ',' ',' ','/'},
        {' ','/','/',' ',' ',' ',' ',' ','\\','\\',' ',' ',' ',' ',' ',' ','/',' '},
        {'|','|',' ','\\',' ',' ',' ','/',' ','|','|',' ',' ',' ',' ','/',' ',' '},
        {' ','|',' ','^',' ',' ',' ','^',' ','|',' ',' ','_','_','/','_',' ',' '},
        {' ','|',' ',' ','_','_','_',' ',' ','|',' ',' ','\\','\\','\\','/',' ',' '},
        {' ','|','\\','(','_','_','_',')','/','|',' ',' ',' ','|',' ','|',' ',' '},
        {' ',' ','\\','_','_','_','_','_','/',' ',' ',' ',' ','|',' ','|',' ',' '},
        {' ',' ',' ','|',' ',' ',' ','|',' ',' ',' ',' ',' ','|',' ','|',' ',' '},
        {' ','_','/',' ',' ',' ',' ',' ','\\','_','_','_','/',' ','/',' ',' ',' '},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ','_','_','_','/',' ',' ',' ',' '},
        {'|',' ','|',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' '},
        {'|',' ','|',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' '},
        {'|',' ','|',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' '},

    };
    for (int r = 0; r < 13; r++) {
        for (int c = 0; c < 18; c++) {
            if (rFarouk + r < 1000 && cFarouk + c < 1000) {
                screenArray[rFarouk + r][cFarouk + c] = Farouk[r][c];
            }
        }
    }
}
void FaroukD(char screenArray[][1000], int rFarouk, int cFarouk)
{
    char Farouk[13][23] = {
        {' ',' ',' ','_','_','_','_','_',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {' ','/','/',' ',' ',' ',' ',' ','\\','\\',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {'|','|',' ','\\',' ',' ',' ','/',' ','|','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {' ','|',' ','^',' ',' ',' ','^',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {' ','|',' ',' ','_','_','_',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {' ','|','\\','(','_','_','_',')','/','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {' ',' ','\\','_','_','_','_','_','/',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {' ',' ',' ','|',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {' ','_','/',' ',' ',' ',' ',' ','\\','_','_','_','_','_',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ','_','_',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' '},
        {'|',' ','|',' ',' ',' ',' ',' ',' ','|',' ',' ','|',' ','|',' ',' ',' ',' ',' ',' ',' ',' '},
        {'|',' ','|',' ',' ',' ',' ',' ',' ','|',' ','_','|',' ','|','_','_','_','_','_','_','_','_'},
        {'|',' ','|',' ',' ',' ',' ',' ',' ','|',' ','\\','_','/','/','/',' ',' ',' ',' ',' ',' ',' '},

    };
    for (int r = 0; r < 13; r++) {
        for (int c = 0; c < 23; c++) {
            if (rFarouk + r < 1000 && cFarouk + c < 1000) {
                screenArray[rFarouk + r][cFarouk + c] = Farouk[r][c];
            }
        }
    }
}
void FaroukW(char screenArray[][1000], int rFarouk, int cFarouk)
{
    char Farouk[13][25] = {
      {' ',' ',' ','_','_','_','_','_',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
      {' ','/','/',' ',' ',' ',' ',' ','\\','\\',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
      {'|','|',' ','_',' ',' ',' ','_',' ','|','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
      {' ','|',' ','O',' ',' ',' ','O',' ','|',' ',' ',' ',' ','E','t','l','a','3',' ','B','a','r','a',' '},
      {' ','|',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
      {' ','|','\\','(','\\','_','/',')','/','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
      {' ',' ','\\','_','_','_','_','_','/',' ',' ',' ',' ',' ',' ',' ',' ','_',' ',' ','_','_','_',' ',' '},
      {' ',' ',' ','|',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ','|',' ','|','/','_','_','_','\\',' '},
      {' ','_','/',' ',' ',' ',' ',' ','\\','_','_','_','_','_','_','_','|',' ',' ',' ','_','_','_',' ','|'},
      {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','_','_','_','_','_','\\','_','_','_','_','_','_','/',' '},
      {'|',' ','|',' ',' ',' ',' ',' ',' ',' ','/',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
      {'|',' ','|',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
      {'|',' ','|',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
    };
    for (int r = 0; r < 13; r++) {
        for (int c = 0; c < 25; c++) {
            if (rFarouk + r < 1000 && cFarouk + c < 1000) {
                screenArray[rFarouk + r][cFarouk + c] = Farouk[r][c];
            }
        }
    }
}

//Questions
void Q1(char screenArray[1000][1000], int rText, int cText)
{
    char Question[1][39] = {
        {'W','H','I','C','H',' ','O','F',' ','T','H','E','S','E',' ','I','S',' ','N','O','T',' ','A','N',' ','I','N','F','I','N','I','T','E',' ','L','O','O','P','?'}
    };
    for (int r = 0; r < 1; r++) {
        for (int c = 0; c < 39; c++) {
            if (rText + r < 80 && cText + c < 120)
                screenArray[rText + r][cText + c] = Question[r][c];
        }
    }
}
void A1Q1(char screenArray[1000][1000], int rText, int cText)
{
    char Question[1][9] = {
        {'W','H','I','L','E',' ','(','1',')'}
    };
    for (int r = 0; r < 1; r++) {
        for (int c = 0; c < 9; c++) {
            if (rText + r < 80 && cText + c < 120)
                screenArray[rText + r][cText + c] = Question[r][c];
        }
    }
}
void A2Q1(char screenArray[1000][1000], int rText, int cText)
{
    char Question[1][11] = {
        {'F','O','R',' ','(',' ',';',' ',';',' ',')'}
    };
    for (int r = 0; r < 1; r++) {
        for (int c = 0; c < 11; c++) {
            if (rText + r < 80 && cText + c < 120)
                screenArray[rText + r][cText + c] = Question[r][c];
        }
    }
}
void A3Q1(char screenArray[1000][1000], int rText, int cText)
{
    char Question[1][21] = {
        {'F','O','R',' ','(','i','=','0',' ',';',' ','i','<','10',' ',';',' ','i','+','+',')'}
    };
    for (int r = 0; r < 1; r++) {
        for (int c = 0; c < 21; c++) {
            if (rText + r < 80 && cText + c < 120)
                screenArray[rText + r][cText + c] = Question[r][c];
        }
    }
}

void Q2(char screenArray[1000][1000], int rText, int cText)
{
    char Question[2][34] = {
            {'W','H','A','T',' ','T','Y','P','E',' ','O','F',' ','C','O','N','S','T','R','O','C','T','O','R',' ','I','S',' ','T','H','I','S',' ','?'},
            {' ','|',' ','M','Y','C','L','A','S','S','(','c','o','n','s','t',' ','M','Y','C','A','L','S','S',' ','&',' ','o','b','j',')',' ','|',' '},
    };
    for (int r = 0; r < 2; r++) {
        for (int c = 0; c < 34; c++) {
            if (rText + r < 80 && cText + c < 120)
                screenArray[rText + r][cText + c] = Question[r][c];
        }
    }
}
void A1Q2(char screenArray[1000][1000], int rText, int cText)
{
    char Question[1][16] = {
        {'C','O','P','Y',' ','C','O','N','S','T','R','U','C','T','O','R'}
    };
    for (int r = 0; r < 1; r++) {
        for (int c = 0; c < 16; c++) {
            if (rText + r < 80 && cText + c < 120)
                screenArray[rText + r][cText + c] = Question[r][c];
        }
    }
}
void A2Q2(char screenArray[1000][1000], int rText, int cText)
{
    char Question[1][19] = {
        {'D','E','F','A','U','L','T',' ','C','O','N','S','T','R','U','C','T','O','R'}
    };
    for (int r = 0; r < 1; r++) {
        for (int c = 0; c < 19; c++) {
            if (rText + r < 80 && cText + c < 120)
                screenArray[rText + r][cText + c] = Question[r][c];
        }
    }
}
void A3Q2(char screenArray[1000][1000], int rText, int cText)
{
    char Question[1][22] = {
        {'O','V','E','R',' ','L','O','A','A','D',' ','C','O','N','S','T','R','U','C','T','O','R'}
    };
    for (int r = 0; r < 1; r++) {
        for (int c = 0; c < 22; c++) {
            if (rText + r < 80 && cText + c < 120)
                screenArray[rText + r][cText + c] = Question[r][c];
        }
    }
}

void Q3(char screenArray[1000][1000], int rText, int cText)
{
    char Question[1][36] = {
            {'W','H','A','T',' ','I','S',' ','T','H','E',' ','B','E','S','T',' ','U','N','I','V','E','R','S','I','T','Y',' ','I','N',' ','E','G','Y','P','T'}
    };
    for (int r = 0; r < 1; r++) {
        for (int c = 0; c < 36; c++) {
            if (rText + r < 80 && cText + c < 120)
                screenArray[rText + r][cText + c] = Question[r][c];
        }
    }
}
void A1Q3(char screenArray[1000][1000], int rText, int cText)
{
    char Question[1][15] = {
        {'M','U','S','T',' ','U','N','I','V','E','R','S','I','T','Y'}
    };
    for (int r = 0; r < 1; r++) {
        for (int c = 0; c < 15; c++) {
            if (rText + r < 80 && cText + c < 120)
                screenArray[rText + r][cText + c] = Question[r][c];
        }
    }
}
void A2Q3(char screenArray[1000][1000], int rText, int cText)
{
    char Question[1][14] = {
        {'M','S','A',' ','U','N','I','V','E','R','S','I','T','Y'}
    };
    for (int r = 0; r < 1; r++) {
        for (int c = 0; c < 14; c++) {
            if (rText + r < 80 && cText + c < 120)
                screenArray[rText + r][cText + c] = Question[r][c];
        }
    }
}
void A3Q3(char screenArray[1000][1000], int rText, int cText)
{
    char Question[1][25] = {
        {'6','T','H',' ','O','F',' ','O','C','T','O','B','E','R',' ','U','N','I','V','E','R','S','I','T','Y'}
    };
    for (int r = 0; r < 1; r++) {
        for (int c = 0; c < 25; c++) {
            if (rText + r < 80 && cText + c < 120)
                screenArray[rText + r][cText + c] = Question[r][c];
        }
    }
}

//objects
void DrawPortal(char screenArray[1000][1000], int rPortal, int cPortal) {
    char Portal[19][21] = {
    {' ', '_', '_', '_', '_', '_', '_', '_', '_', '_', '_', '_', '_', '_', '_', '_', '_', '_', '_', '_', ' '},
    {'|', ' ', ' ', '_', '_', '_', '_', '_', '_', '_', '_', '_', '_', '_', '_', '_', '_', '_', ' ', ' ', '|'},
    {'|', ' ', '|', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|', ' ', '|'},
    {'|', ' ', '|', ' ', ' ', '*', ' ', ' ', ' ', ' ', ' ', ' ', '*', ' ', ' ', ' ', ' ', ' ', '|', ' ', '|'},
    {'|', ' ', '|', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|', ' ', '|'},
    {'|', ' ', '|', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '*', ' ', '|', ' ', '|'},
    {'|', ' ', '|', ' ', ' ', '*', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|', ' ', '|'},
    {'|', ' ', '|', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '*', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|', ' ', '|'},
    {'|', ' ', '|', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '*', ' ', ' ', '|', ' ', '|'},
    {'|', ' ', '|', '*', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|', ' ', '|'},
    {'|', ' ', '|', ' ', ' ', ' ', ' ', '*', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|', ' ', '|'},
    {'|', ' ', '|', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '*', ' ', ' ', ' ', '|', ' ', '|'},
    {'|', ' ', '|', ' ', ' ', ' ', ' ', ' ', ' ', '*', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '*', '|', ' ', '|'},
    {'|', ' ', '|', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|', ' ', '|'},
    {'|', ' ', '|', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|', ' ', '|'},
    {'|', ' ', '|', ' ', ' ', '*', ' ', ' ', ' ', ' ', ' ', ' ', '*', ' ', ' ', ' ', ' ', ' ', '|', ' ', '|'},
    {'|', ' ', '|', ' ', ' ', ' ', ' ', '*', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|', ' ', '|'},
    {'|', ' ', '|', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|', ' ', '|'},
    {'|', ' ', '|', '_', '_', '_', '_', '_', '_', '_', '_', '_', '_', '_', '_', '_', '_', '_', '|', ' ', '|'}
    };

    for (int r = 0; r < 19; r++) {
        for (int c = 0; c < 21; c++) {
            if (rPortal + r < 80 && cPortal + c < 120) {
                screenArray[rPortal + r][cPortal + c] = Portal[r][c];
            }
        }
    }
}
void Bed(char ScreenArray[1000][1000], int rBed, int cBed)
{
    char bed[29][64] = {
    {' ','.',':',':','"','"','-',',',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','.',':',':','"','"','-','.',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
    {'/',':',':',' ',' ',' ',' ',' ','\\',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','/',':',':',' ',' ',' ',' ',' ','\\',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
    {'|',':',':',' ',' ',' ',' ',' ','|',' ',' ',' ','_','.','.','-','-','"','"','"','"','-','-','.','.','_',' ',' ',' ','|',':',':',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
    {'\'','\\',':','.','_','_',' ','/',' ','.','\'',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','\'','.',' ',' ','\\',':','.','_','_',' ','/',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
    {' ','|','|','_','_','_','_','|','.','\'',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','\'','.','|','|','_','_','_','_','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
    {' ','|','|',':','.',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',':','.',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',},
    {' ','|','|',':','.',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',':','.',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
    {' ','|','|',':','.',' ',' ','|',' ',' ','_','.','.','-','-','-','"','`','`','`','`','`','`','`','`','\'','-','-','-','.',' ','|',':','.',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
    {' ','|','|',':','.',' ',' ','|',' ','`',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','\\',':','.',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
    {' ','|','|',':','.',' ',' ','|',':',' ',':',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','.','-','-','.','_','.','-','"','"','-',';',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',},
    {' ','|','|',':','.',' ',' ','|',':',' ',':',' ','_','.','-','-','-','`','`','`','`','`','`','-','-','-','/',' ',' ',' ',' ','\'','.',' ',' ',' ','_','.','`','.',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
    {' ','|','|',':','.',' ',' ','|',' ','.','-','\'',' ',' ','_',',','\'','`','`','`','\'','-','.','.','.','\'',' ',' ',' ','_',' ','.','-','\'','.','\'',' ',' ',' ',' ','\'','-','.',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
    {' ','|','|',':','.',' ','.','-','\'',' ',' ',' ','.','\'',' ',' ',' ',' ',' ',' ',' ',' ','\'','.',' ','.',' ','\'',' ',' ',' ',' ',' ',' ','\'','.',' ',' ',' ','.',' ','\'','\'','-','.','_',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
    {' ','|','|',':',' ',';','.','\'',' ','.','`','\'',' ',' ',' ',' ',' ',' ',' ',' ','_','.',' ','\'','`','\'','-','.',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
    {' ','|','|',':','.',' ',':',' ',' ',' ','\'','.',' ',' ',' ',' ',' ','.','\'',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','\'','.',' ',' ','.',' ','\'',' ','\'',' ','\'','.','`',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
    {' ','|','|',':','.',' ',':',' ',' ',' ',' ','\'','.',' ','.','\'',' ',' ',' ',' ',' ','.',':',':','"','"','-',':',' ','.','\'','\'','.',' ',' ',' ',' ',' ',' ',' ',' ','\'',' ','.',' ',' ',' ','.',' ','\'',' ','\'',' ',':',':',':','"','"','-','.',' ',' ',' ',' '},
    {' ','|','|',':','.',' ','\'',' ',' ',' ',' ',' ','.','.','\'',' ','.',' ',' ',' ',' ','/',':',':',' ',' ',' ',' ',' ','\\',' ',' ',' ',' ','\'','.',' ',' ',' ',' ',' ',' ',' ',' ','.',' ','\'','.',' ',' ',' ',' ','/',':',':',' ',' ',' ',' ',' ','\\',' ',' ',' '},
    {' ','|','|',':',' ',' ',':',' ',' ','.',' ','.','\'',' ',' ',' ',' ',' ',' ','\'','.','|',':',':',' ',' ',' ',' ',' ','|',' ',' ',' ',' ','_','.',':','-','-','-','"','"','-','-','-','.','.','_','\'',' ',' ',' ','|',':',':',' ',' ',' ',' ',' ','|',' ',' ',' '},
    {' ','|','|','.',' ',' ',';',' ',' ','.',':',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','\'','\\',':','.','_','_',' ','/',' ',' ',' ','.','\'',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','\'','.',' ',' ','\\',':','.','_','_',' ','/',' ',' ',' ',' '},
    {' ','|','|',':',' ',' ',';',' ',' ',':',' ','\'','.',' ',' ',' ',' ',' ',' ',' ','.',' ','|','|','_','_','_','_','|','_','.','\'',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','|','_','_','_','_','|',' ',' ',' ',' '},
    {' ','|','|',':',' ',' ',';','_','_',':',' ',' ',' ','\'','.',' ',' ',' ','.','\'',' ',' ','|','|',':','.',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','|',':','.',' ',' ','|',' ',' ',' ',' '},
    {' ','|','|',':','_','_','_','|',' ','\\',' ',' ',' ',' ',' ','\'','.',' ',':',' ',' ',' ','|','|',':','.',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','|',':','.',' ',' ','|',' ',' ',' ',' '},
    {' ','[','[','_','_','_','_',']',' ',' ','\'','.',' ',' ',' ',' ',' ','.','-','.','_',' ','|','|',':','.',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','|',':','.',' ',' ','|','-','-','-','-'},
    {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','\'','.',' ',' ',' ',' ',':',' ',' ',' ','|','|',':','.',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','|',':','.',' ',' ','|',' ',' ',' ',' '},
    {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','\'','.',' ',' ',':',' ',' ',' ','|','|',':','.',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','|',':','.',' ',' ','|',' ',' ',' ',' '},
    {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','\'','-',':',' ',' ',' ','|','|',':','.',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','|',':','.',' ',' ','|',' ',' ',' ',' '},
    {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','\'','.','_','|','|',':','.',' ',' ','|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|','|',':','.',' ',' ','|',' ',' ',' ',' '},
    {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','|',':','_','_','_','|','\'','-','.','-','\'','-','.','-','\'','-','.','-','\'','-','.','-','\'','-','.','-','\'','-','.','-','|','|',':','_','_','_','|',' ',' ',' ',' '},
    {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','[','[','_','_','_','_',']',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','[','[','_','_','_','_',']',' ',' ',' ',' '}
    };

    for (int r = 0; r < 29; r++) {
        for (int c = 0; c < 64; c++) {
            if (rBed + r < 1000 && cBed + c < 1000) {
                ScreenArray[rBed + r][cBed + c] = bed[r][c];
            }
        }
    }
}
void DrawApple(char ScreenArray[1000][1000], int rApple, int cApple)
{

    char apple[2][3] =
    {
        {' ','\\', ','},
        {'[', ' ', ']'},
    };

    for (int r = 0; r < 2; r++) {
        for (int c = 0; c < 3; c++) {
            if (rApple + r < 1000 && cApple + c < 1000) {
                ScreenArray[rApple + r][cApple + c] = apple[r][c];
            }
        }
    }

}

void DrawLevel1Floor(char screenArray[1000][1000], int r) {
    for (int j = 0; j < 122; j++) {
        screenArray[r][j] = '-';
    }
}







Size DrawRobot(char screenArray[1000][1000], int rRobot, int cRobot) {
    char Robot[13][13] = {
    { ' ', ' ', ' ', ' ', ' ', ' ', 'o', ' ', ' ', ' ' ,' ',' ',' '},
    { ' ', ' ', ' ', '_', '_', '_', '|', '_', '_', '_' ,' ',' ',' '},
    { ' ', ' ', '|', ' ', '\\', ' ', ' ', ' ', '/',' ' , '|',' ',' '},
    { ' ', ' ', '|', ' ', '0', ' ', ' ', ' ', '0',' ' , '|',' ',' '},
    { ' ', ' ', '|', ' ', ' ', ' ', '-', ' ', ' ',' ' , '|',' ',' '},
    { ' ', ' ', ' ', '-', '_', '_', '_', '_', '_', '-',' ',' ',' '},
    { ' ', ' ', '/', '|', ' ', ' ', ' ', '.','-', '|', '\\' ,' ',' '},
    { ' ', '/',' ', '|', ' ', ' ', ' ', ' ', ' ', '|', ' ', '\\',' '},
    { 'o', ' ',' ', '|', '_', '/', '\\', '_', '_', '|', ' ', ' ','o' },
    { ' ', ' ', ' ', '\'', '_', '_', '_', '_', '_', '\'',' ',' ',' '},
    { ' ', ' ', ' ', ' ', '|', ' ', ' ', '|', ' ', ' ',' ',' ',' '},
    { ' ', ' ', ' ', ' ', '|', ' ', ' ', '|', ' ', ' ',' ',' ',' '},
    { ' ', ' ', ' ', ' ', 'o', ' ', ' ', 'o', ' ', ' ',' ',' ',' '}
    };
    for (int r = 0; r < 13; r++) {
        for (int c = 0; c < 13; c++) {
            char ch = Robot[r][c];
            int R = rRobot + r;
            int C = cRobot + c;
            if (ch != ' ' && R >= 0 && R < 80 && C >= 0 && C < 120)
                screenArray[R][C] = ch;
        }
    }
    return { 13,13 };
}
void DrawElevator(char screenArray[1000][1000], int rBox, int cBox) {
    char Elevator[][18] = {
       {' ','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_',' '},
       {'|','|',' ',' ','|',' ',' ','|',' ',' ','|',' ',' ','|',' ',' ','|','|'},
       {'|','|',' ',' ','|',' ',' ','|',' ',' ','|',' ',' ','|',' ',' ','|','|'},
       {'|','|',' ',' ','|',' ',' ','|',' ',' ','|',' ',' ','|',' ',' ','|','|'},
       {'|','|',' ',' ','|',' ',' ','|',' ',' ','|',' ',' ','|',' ',' ','|','|'},
       {'|','|',' ',' ','|',' ',' ','|',' ',' ','|',' ',' ','|',' ',' ','|','|'},
       {'|','|',' ',' ','|',' ',' ','|',' ',' ','|',' ',' ','|',' ',' ','|','|'},
       {'|','|',' ',' ','|',' ',' ','|',' ',' ','|',' ',' ','|',' ',' ','|','|'},
       {'|','|',' ',' ','|',' ',' ','|',' ',' ','|',' ',' ','|',' ',' ','|','|'},
       {'|','|',' ',' ','|',' ',' ','|',' ',' ','|',' ',' ','|',' ',' ','|','|'},
       {'|','|',' ',' ','|',' ',' ','|',' ',' ','|',' ',' ','|',' ',' ','|','|'},
       {'|','|',' ',' ','|',' ',' ','|',' ',' ','|',' ',' ','|',' ',' ','|','|'},
       {'|','|',' ',' ','|',' ',' ','|',' ',' ','|',' ',' ','|',' ',' ','|','|'},
       {'|','|',' ',' ','|',' ',' ','|',' ',' ','|',' ',' ','|',' ',' ','|','|'},
       {'|','|',' ',' ','|',' ',' ','|',' ',' ','|',' ',' ','|',' ',' ','|','|'},
       {'|','|','_','_','|','_','_','|','_','_','|','_','_','|','_','_','|','|'}
    };


    for (int r = 0; r < 16; r++) {
        for (int c = 0; c < 18; c++) {
            if (Elevator[r][c] != ' ' && rBox + r < 1000 && cBox + c < 1000)
                screenArray[rBox + r][cBox + c] = Elevator[r][c];
        }
    }
}
void Oops(char screenArray[1000][1000], int rText, int cText) {
    char Ouch[] = { 'O','o','p','s','!' };
    for (int c = 0; c < 4; c++) {
        if (rText < 83 && cText + c < 125) {
            screenArray[rText][cText + c] = Ouch[c];
        }
    }
}
void Ouch(char screenArray[1000][1000], int rText, int cText) {
    char Ouch[] = { 'O','u','c','h',' ','L','o','o','k',',','s',' ','L','i','k','e' };
    for (int c = 0; c < 16; c++) {
        if (rText < 80 && cText + c < 120) {
            screenArray[rText][cText + c] = Ouch[c];
        }
    }
}
void Fall(char screenArray[1000][1000], int rText, int cText) {
    char Fall[] = { 'I','v','e',' ','f','a','l','l','e','n',' ','d','o','w','n',' ',':','C' };
    for (int c = 0; c < 18; c++) {
        if (rText < 80 && cText + c < 120) {
            screenArray[rText][cText + c] = Fall[c];
        }
    }
}
void Ladd(char screenArray[1000][1000], int rText, int cText) {
    char Ladd[] = { 'O','h',' ','a',' ','l','a','d','d','e','r','!' };
    for (int c = 0; c < 11; c++) {
        if (rText < 80 && cText + c < 120) {
            screenArray[rText][cText + c] = Ladd[c];
        }
    }
}
void Pickaxe(char screenArray[1000][1000], int rText, int cText) {
    char Pickaxe[] = { 'L','o','o','k',' ','i','n',' ','t','h','e',' ','b','o','x',' ','d','o','w','n',' ','t','h','e','r','e','!' };
    for (int c = 0; c < 27; c++) {
        if (rText < 80 && cText + c < 120) {
            screenArray[rText][cText + c] = Pickaxe[c];
        }
    }
}

void FrogRight(char screenArray[1000][1000], int rFrog, int cFrog) {
    char FROG[8][18] = {
        {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','_',' ',' ',' '},
        {' ',' ','_','_',' ',' ',' ','_','_','_','.','-','-','\'','_','`','.',' '},
        {' ','(',' ','_','`','.','\'','.',' ','-',' ',' ',' ','\'','o','`',' ',')'},
        {' ','_','\\','.','\'','_','\'',' ',' ',' ',' ',' ',' ','_','.','-','\'',' '},
        {'(',' ','\\','`','.',' ',')',' ',' ',' ',' ','/','/','\\','`',' ',' ',' '},
        {' ','\\','_','`','-','\'','`','-','-','-','\'','\\','\\','_','_',',',' ',' '},
        {' ',' ','\\','`',' ',' ',' ',' ',' ',' ',' ',' ','`','-','\\',' ',' ',' '},
        {' ',' ',' ','`',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
    };
    for (int r = 0; r < 8; r++) {
        for (int c = 0; c < 18; c++) {
            if (FROG[r][c] != ' ' && rFrog + r < 80 && cFrog + c < 120)
                screenArray[rFrog + r][cFrog + c] = FROG[r][c];
        }
    }
}
void DrawTounge(char screenArray[1000][1000], int frogr, int frogc, int& f, int& stand) {
    for (int i = 0; i < 50; i++) {
        for (int c = frogc - 1; c > f; c--) {
            if (frogr < 100 && c < 125) {
                if (screenArray[frogr][c] == ' ') {
                    screenArray[frogr][c] = '-';
                }
            }
        }
    }
    if (f > frogc - 50) {
        f -= 5;
    }
    if (f <= frogc - 50) {
        f = frogc - 2;
    }

}
void DrawToungehgl(char screenArray[1000][1000], int frogr, int frogc, int& f, int& stand) {
    for (int i = 0; i < 50; i++) {
        for (int c = frogc + 1; c < f; c++) {
            if (frogr < 100 && c < 125) {
                if (screenArray[frogr][c] == ' ') {
                    screenArray[frogr][c] = '-';
                }
            }
        }
    }
    if (f > frogc + 50) {
        f += 5;
    }
    if (f <= frogc + 50) {
        f = frogc + 2;
    }

}
void DrawWall(char screenArray[1000][1000], int rTree, int cTree)
{
    char Wall[][33] = {
       {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
       {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
       {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
       {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
       {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
       {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
       {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
       {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
       {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
       {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
       {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
       {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
       {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
       {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
       {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
       {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
       {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
       {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
       {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
       {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
       {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
       {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
       {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
       {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
       {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
       {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
       {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
       {'|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|'}
    };
    for (int r = 0; r < 28; r++) {
        for (int c = 0; c < 33; c++) {
            if (rTree + r < 80 && cTree + c < 120)
                screenArray[rTree + r][cTree + c] = Wall[r][c];
        }
    }
}

void FrogLeft(char screenArray[1000][1000], int rFrog, int cFrog) {
    char FROG[8][18] = {
        {' ',' ',' ','_',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {' ','.','\'','_','`','-','-','.','_','_','_',' ',' ',' ','_','_',' ',' '},
        {'(',' ','\'','o','`',' ',' ',' ','-',' ','.','`','.','\'','_',' ',')',' '},
        {' ','`','-','.','_',' ',' ',' ',' ',' ',' ','`','_','`','.','/','_',' '},
        {' ',' ',' ','\'','/','\\','\\',' ',' ',' ',' ','(',' ','.','\'','/',' ',')'},
        {' ',' ',',','_','_','/','/','`','-','-','-','\'','`','-','\'','_','/',' '},
        {' ',' ',' ','/','-','\'',' ',' ',' ',' ',' ',' ',' ',' ','\'','/',' ',' '},
        {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','\'',' ',' ',' '},
    };
    for (int r = 0; r < 8; r++) {
        for (int c = 0; c < 18; c++) {
            if (FROG[r][c] != ' ' && rFrog + r < 80 && cFrog + c < 120)
                screenArray[rFrog + r][cFrog + c] = FROG[r][c];
        }
    }
}

void MoveHeroFrog(char screenArray[1000][1000], int& HeroRow, int& HeroCol, char ch, Size heroSize) {
    if (HeroCol < 125 && ch == 'd') HeroCol += 2;
    if (HeroRow + heroSize.Y < 90 && ch == 's') HeroRow += 2;
    if (HeroRow - 6 > 0 && ch == 'w') HeroRow -= 2;
    if (HeroCol > 0 && ch == 'a') HeroCol -= 2;
}
void MoveHeroFrogUD(char screenArray[1000][1000], int& HeroRow, int& HeroCol, char ch, Size heroSize) {
    if (HeroRow + heroSize.Y < 90 && ch == 's') HeroRow += 2;
    if (HeroRow - 6 > 0 && ch == 'w') HeroRow -= 2;
}
void MoveHeroFrogRL(char screenArray[1000][1000], int& HeroRow, int& HeroCol, char ch, Size heroSize) {
    if (HeroCol < 125 && ch == 'd') HeroCol += 2;
    if (HeroCol > 0 && ch == 'a') HeroCol -= 2;
}

Size DrawPacman(char screenArray[1000][1000], int rPac, int cPac) {
    char PacMan[3][5] = {
    {' ','_','_','_',' ' },
    {'/','.','_','.','\\'},
    {'\\','_','_','_','/'},
    };
    for (int r = 0; r < 3; r++) {
        for (int c = 0; c < 5; c++) {
            char ch = PacMan[r][c];
            int R = rPac + r;
            int C = cPac + c;
            if (ch != ' ' && R >= 0 && R < 1000 && C >= 0 && C < 1000)
                screenArray[R][C] = ch;
        }
    }
    return { 3,5 };
}

void DrawHeart(char screenArray[1000][1000], int rHeart, int cHeart) {
    char HEART[6][7] = {
    {' ', '_', ' ', ' ', ' ', '_', ' '},
    {'/', ' ', ' ', 'V', ' ', ' ', '\\'},
    {'|', ' ', ' ', ' ', ' ', ' ', '|'},
    {' ', '\\', ' ', ' ', ' ', '/', ' '},
    {' ', ' ', '\\', ' ', '/', ' ', ' '},
    {' ', ' ', ' ', '*', ' ', ' ', ' '}
    };
    for (int r = 0; r < 6; r++) {
        for (int c = 0; c < 7; c++) {
            if (rHeart + r < 80 && cHeart + c < 120)
                screenArray[rHeart + r][cHeart + c] = HEART[r][c];
        }
    }
}

void DrawTrees(char screenArray[1000][1000], int rTree, int cTree) {
    char Tree[9][13] = {
    {' ', ' ', ' ', '_', '_', '_', '_', '_', '_', '_', ' ', ' ', ' '},
    {' ', ' ', '(', ' ', '*', ' ', ' ', ' ', ' ', ' ', ')', ' ', ' '},
    {' ', '{', ' ', ' ', ' ', ' ', ' ', ' ', '*', ' ', ' ','}', ' '},
    {'{', ' ', '*', ' ', ' ', '*', ' ', ' ', ' ', ' ', ' ',' ', '}'},
    {' ', '{', ' ', ' ', ' ', ' ', '*', ' ', ' ', ' ', ' ', '}', ' '},
    {' ', ' ', '{', ' ', '*', ' ', ' ', '*', ' ', ' ', '}', ' ', ' '},
    {' ', ' ', ' ', '\\', '_', '_', '_', '_', '_', '/', ' ', ' ', ' '},
    {' ', ' ', ' ', ' ', ' ', '|', ' ', '|', ' ', ' ', ' ', ' ', ' '},
    {' ', ' ', ' ', ' ', ' ', '|', ' ', '|', ' ', ' ', ' ', ' ', ' '}
    };
    for (int r = 0; r < 9; r++) {
        for (int c = 0; c < 13; c++) {
            if (rTree + r < 1000 && cTree + c < 1000)
                screenArray[rTree + r][cTree + c] = Tree[r][c];
        }
    }
}
void DrawMultipleTrees(char screenArray[1000][1000])
{
    int pathwayStartCol = 50;
    int pathwayWidth = 10;
    //top
    DrawTrees(screenArray, 5, 5);
    DrawTrees(screenArray, 10, 18);
    DrawTrees(screenArray, 4, 39);
    DrawTrees(screenArray, 10, 65);
    DrawTrees(screenArray, 10, 28);
    DrawTrees(screenArray, 23, 39);
    DrawTrees(screenArray, 17, 52);
    DrawTrees(screenArray, 20, 75);
    DrawTrees(screenArray, 20, 93);
    DrawTrees(screenArray, 18, 105);
    DrawTrees(screenArray, 23, 145);
    DrawTrees(screenArray, 5, 105);
    DrawTrees(screenArray, 10, 118);
    DrawTrees(screenArray, 4, 139);
    DrawTrees(screenArray, 10, 165);
    DrawTrees(screenArray, 20, 175);
    DrawTrees(screenArray, 23, 203);
    DrawTrees(screenArray, 17, 118);
    DrawTrees(screenArray, 21, 190);
    //bottom
    DrawTrees(screenArray, 30, 39);
    DrawTrees(screenArray, 32, 52);
    DrawTrees(screenArray, 29, 75);
    DrawTrees(screenArray, 34, 98);
    DrawTrees(screenArray, 32, 111);
    DrawTrees(screenArray, 38, 124);
    DrawTrees(screenArray, 30, 39);
    DrawTrees(screenArray, 32, 52);
    DrawTrees(screenArray, 29, 75);
    DrawTrees(screenArray, 34, 98);
    DrawTrees(screenArray, 32, 111);
    DrawTrees(screenArray, 38, 124);
    DrawTrees(screenArray, 29, 137);
    DrawTrees(screenArray, 32, 150);


}

void DrawTree(char screenArray[1000][1000], int rTree, int cTree)
{
    char Tree[12][24] = {

    {'v',' ','.',' ',' ',' ','.','_',',',' ','|','_',' ',' ','.',',',' ',' ',' ',' ',' ',' ',' ',' '},
    {' ',' ',' ','`','-','.','_','\\','/',' ',' ','.',' ',' ','\\',' ','/',' ',' ',' ',' ','|','/','_'},
    {' ',' ',' ',' ',' ',' ',' ','\\','\\',' ',' ','_','\\',',',',',' ','y',' ','|',' ','\\','/','/',' '},
    {' ','_','\\','_','.','_','_','_','\\','\\',',',',',' ','\\','\\','/',' ','-','.','\\','|','|',' ',' '},
    {' ',' ',' ','`','7','-',',','-','-','.','`','.','_','|','|',' ','/',' ','/',' ',',',' ',' ',' '},
    {' ',' ',' ','\'',' ',' ',' ',' ',' ','`','-','.',' ','`','.','/',' ','/',' ','|','/','_','.','\''},
    {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ','|','/','/',' ',' ',' ',' ',' '},
    {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','-',' ',' ','|',' ',' ',' ',' ',' ',' ',' '},
    {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','_',' ',' ',' ','/',' ',' ',' ',' ',' ',' '},
    {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ','=','|',' ',' ',' ',' ',' ',' ',' '},
    {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' '},
    {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','/',' ',',',' ','.',' ','\\',' ',' ',' ',' ',' ',' '}
    };
    for (int r = 0; r < 12; r++) {
        for (int c = 0; c < 24; c++) {
            if (rTree + r < 80 && cTree + c < 120)
                screenArray[rTree + r][cTree + c] = Tree[r][c];
        }
    }
}
void DrawGhost(char ScreenArray[1000][1000], int rghost, int cghost) {
    char GHOST[4][5] = {
        {' ', '.', '-', '.', ' '},
        {'|', 'O', ' ', 'O', '|'},
        {'|', ' ', ' ', ' ', '|'},
        {',', '^', '^', '^', ','},
    };
    for (int r = 0; r < 4; r++) {
        for (int c = 0; c < 5; c++) {
            if (rghost + r < 1000 && cghost + c < 1000) {
                ScreenArray[rghost + r][cghost + c] = GHOST[r][c];
            }
        }
    }
}

void DrawFlowerPot(char screenArray[1000][1000], int rFlower, int cFlower)
{
    char flowerpot[5][7] = {
    {' ',' ','_',' ',' ','<','{'},
    {' ',' ',' ',')','/',' ',' '},
    {'_','_','_','(','_','_',' '},
    {'\\',' ',' ',' ',' ','/',' '},
    {'_','\\','_','_','/','_','_'},
    };
    for (int r = 0; r < 5; r++) {
        for (int c = 0; c < 7; c++) {
            if (rFlower + r < 80 && cFlower + c < 120)
                screenArray[rFlower + r][cFlower + c] = flowerpot[r][c];
        }
    }

}
void DrawBox(char screenArray[1000][1000], int rBox, int cBox) {
    char BOX[7][13] = {
    {' ', ' ', '_', '_', '_', '_', '_', '_', '_', '_', '_', ' ', ' '},
    {' ', '/', ' ', ' ', ' ', ' ', '_', ' ', ' ', ' ', ' ', '\\', ' '},
    {'|', '_', '_', '_', '_', '[', '?', ']', '_', '_', '_','_',  '|'},
    {'|', ' ', ' ', ' ', ' ', ' ', '-', ' ', ' ', ' ', ' ',' ',  '|'},
    {'|', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|'},
    {'|', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|'},
    {' ', '\\', '_', '_', '_', '_', '_', '_', '_', '_', '_', '/', ' '}
    };
    for (int r = 0; r < 7; r++) {
        for (int c = 0; c < 13; c++) {
            if (rBox + r < 1000 && cBox + c < 1000)
                screenArray[rBox + r][cBox + c] = BOX[r][c];
        }
    }
}

void DrawOpenBox(char screenArray[1000][1000], int rBox, int cBox) {
    char OPEN_BOX[10][13] = {
    {' ', ' ', '_', '_', '_', '_', '_', '_', '_', '_', '_', ' ', ' '},
    {' ', '[', ' ', ' ', ' ', 'K', 'E', 'Y', '!', ' ', ' ', '\\', ' '},
    {' ', ' ', '\\', ' ', '(', ')', '=', '=', ' ', ' ', ' ', ' ', '|'},
    {' ', ' ', '|', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|'},
    {'|', ' ', '|', ' ', ' ', ' ', '_', ' ', ' ', ' ', ' ', ' ', '|'},
    {'|', '_', '_', '_', '_', '[', '?', ']', '_', '_', '_','_',  '|'},
    {'|', ' ', ' ', ' ', ' ', ' ', '-', ' ', ' ', ' ', ' ',' ',  '|'},
    {'|', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|'},
    {'|', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|'},
    {' ', '\\', '_', '_', '_', '_', '_', '_', '_', '_', '_', '/', ' '}
    };
    for (int r = 0; r < 10; r++) {
        for (int c = 0; c < 13; c++) {
            if (rBox + r < 1000 && cBox + c < 1000)
                screenArray[rBox + r][cBox + c] = OPEN_BOX[r][c];
        }
    }
}

void DrawGhost1(char ScreenArray[1000][1000], int rghost1, int cghost1) {
    char GHOST[4][5] = {
        {' ', '.', '-', '.', ' '},
        {'|', 'O', ' ', 'O', '|'},
        {'|', ' ', ' ', ' ', '|'},
        {',', '^', '^', '^', ','},
    };
    for (int r = 0; r < 4; r++) {
        for (int c = 0; c < 5; c++) {
            if (rghost1 + r < 1000 && cghost1 + c < 1000) {
                ScreenArray[rghost1 + r][cghost1 + c] = GHOST[r][c];
            }
        }
    }
}

void AppleCollected(char screenArray[1000][1000], int AppleCt, int rCter, int cCter)
{
    char Cter[3][15] =
    {
                {'A','p','p','l','e','s',' ',' ',' ',' ',' ',' ',' ',' ','|'},
                {'C','o','l','l','e','c','t','e','d',':',' ',' ','/','7','|'},
                {'_','_','_','_','_','_','_','_','_','_','_','_','_','_','|'},



    };
    if (AppleCt == 0)Cter[1][11] = '0';
    if (AppleCt == 1)Cter[1][11] = '1';
    if (AppleCt == 2)Cter[1][11] = '2';
    if (AppleCt == 3)Cter[1][11] = '3';
    if (AppleCt == 4)Cter[1][11] = '4';
    if (AppleCt == 5)Cter[1][11] = '5';
    if (AppleCt == 6)Cter[1][11] = '6';
    if (AppleCt == 7)Cter[1][11] = '7';
    if (AppleCt == 8) Cter[1][11] = '8';
    if (AppleCt == 9)Cter[1][11] = '9';


    for (int r = 0; r <3; r++) {
        for (int c = 0; c < 15; c++) {
            if (rCter + r < 1000 && cCter + c < 1000)
                screenArray[rCter + r][cCter + c] = Cter[r][c];
        }
    }
}
void MoveHeroJungle(char screenArray[1000][1000], int& HeroRow, int& HeroCol, char ch)
{
    if (HeroCol < 1000 && ch == 'd') HeroCol += 2;
    if (HeroRow + 5 < 1000 && ch == 's') HeroRow += 2;
    if (HeroRow - 6 > -6 && ch == 'w') HeroRow -= 2;
    if (HeroCol > 0 && ch == 'a') HeroCol -= 2;
}
void MovePacman(char screenArray[1000][1000], int& HeroRow, int& HeroCol, char ch, int& cCter, int& rCter) {
    if (ch == 'd' &&
        screenArray[HeroRow][HeroCol + 5] != '8' &&
        screenArray[HeroRow + 1][HeroCol + 5] != '8' &&
        screenArray[HeroRow + 2][HeroCol + 5] != '8')
    {
        HeroCol += 2; cCter += 2;
    }

    if (ch == 'a' &&
        screenArray[HeroRow][HeroCol - 1] != '8' &&
        screenArray[HeroRow + 1][HeroCol - 1] != '8' &&
        screenArray[HeroRow + 2][HeroCol - 1] != '8')
    {
        HeroCol -= 2; cCter -= 2;
    }

    if (ch == 's' &&
        screenArray[HeroRow + 3][HeroCol] != '8' &&
        screenArray[HeroRow + 3][HeroCol + 1] != '8' &&
        screenArray[HeroRow + 3][HeroCol + 2] != '8' &&
        screenArray[HeroRow + 3][HeroCol + 3] != '8' &&
        screenArray[HeroRow + 3][HeroCol + 4] != '8')
    {
        HeroRow += 2; rCter += 2;
    }

    if (ch == 'w' &&
        screenArray[HeroRow - 1][HeroCol] != '8' &&
        screenArray[HeroRow - 1][HeroCol + 1] != '8' &&
        screenArray[HeroRow - 1][HeroCol + 2] != '8' &&
        screenArray[HeroRow - 1][HeroCol + 3] != '8' &&
        screenArray[HeroRow - 1][HeroCol + 4] != '8')
    {
        HeroRow -= 2; rCter -= 2;
    }
}
void MoveRobot(int& row, int& col, int& dirR) {
    if (dirR == 1) {
        if (row < 14) row += 2;
        else dirR = -1;
    }
    else {
        if (row > 0) row -= 2;
        else dirR = 1;
    }
}
void MoveHero(char screenArray[1000][1000], int& HeroRow, int& HeroCol, char ch) {
    if (HeroCol < 114 && ch == 'd' && HeroRow >5) HeroCol += 2;
    if (HeroRow + 5 < 22 && ch == 's') HeroRow += 2;
    if (HeroRow - 6 > 0 && ch == 'w') HeroRow -= 2;
    if (HeroCol > 0 && ch == 'a' && HeroRow > 5) HeroCol -= 2;
    if (HeroRow - 5 > -8 && HeroCol < 93 && HeroCol >90 && ch == 'w') HeroRow -= 2;
}
void MoveHero1(char screenArray[1000][1000], int& HeroRow, int& HeroCol, char ch) {
    if (HeroCol < 87 && ch == 'd') HeroCol += 2;
    if (HeroCol > 0 && ch == 'a') HeroCol -= 2;
}
void MoveHeroFarouk(char screenArray[1000][1000], int& HeroRow, int& HeroCol, char ch) {
    if (HeroCol < 87 && ch == 'd' && screenArray[HeroRow + 4][HeroCol + 4] != ' ') HeroCol += 3;
    if (HeroCol > 0 && ch == 'a' && screenArray[HeroRow + 4][HeroCol - 1] != ' ') HeroCol -= 3;
}
void MovePacman(char screenArray[1000][1000], int& HeroRow, int& HeroCol, char ch, Size heroSize) {
    if (ch == 'd' &&
        screenArray[HeroRow][HeroCol + 5] != '8' &&
        screenArray[HeroRow + 1][HeroCol + 5] != '8' &&
        screenArray[HeroRow + 2][HeroCol + 5] != '8')
    {
        HeroCol += 2;
    }

    if (ch == 'a' &&
        screenArray[HeroRow][HeroCol - 1] != '8' &&
        screenArray[HeroRow + 1][HeroCol - 1] != '8' &&
        screenArray[HeroRow + 2][HeroCol - 1] != '8')
    {
        HeroCol -= 2;
    }

    if (ch == 's' &&
        screenArray[HeroRow + 3][HeroCol] != '8' &&
        screenArray[HeroRow + 3][HeroCol + 1] != '8' &&
        screenArray[HeroRow + 3][HeroCol + 2] != '8' &&
        screenArray[HeroRow + 3][HeroCol + 3] != '8' &&
        screenArray[HeroRow + 3][HeroCol + 4] != '8')
    {
        HeroRow += 2;
    }

    if (ch == 'w' &&
        screenArray[HeroRow - 1][HeroCol] != '8' &&
        screenArray[HeroRow - 1][HeroCol + 1] != '8' &&
        screenArray[HeroRow - 1][HeroCol + 2] != '8' &&
        screenArray[HeroRow - 1][HeroCol + 3] != '8' &&
        screenArray[HeroRow - 1][HeroCol + 4] != '8')
    {
        HeroRow -= 2;
    }
}
void MoveHero2(char screenArray[1000][1000], int& HeroRow, int& HeroCol, char ch, Size heroSize, int RobotRow, int& ct) {
    if (HeroRow + heroSize.Y < 30 && ch == 's')
    {
        HeroRow += 2;
    }
    if (HeroRow > -1 && ch == 'w')
    {
        HeroRow -= 2;
    }

}
void Shoot(char screenArray[1000][1000], int heroRow, int heroCol, char direction, int RobotRow, int& ct, int Active) {

    if (Active == 1)
    {
        char bullet = '*';
        int bulletRow = heroRow + 6;
        int bulletCol;
        if (direction == 'R') {
            bulletCol = heroCol + 18;
        }
        else {
            bulletCol = heroCol - 1;
        }

        if (bulletRow >= 0 && bulletRow < 80 && bulletCol >= 0 && bulletCol < 120) {
            screenArray[bulletRow][bulletCol] = ' ';
        }

        if (direction == 'R') bulletCol += 15;
        else if (direction == 'L') bulletCol--;

        if (bulletRow >= 0 && bulletRow < 80 && bulletCol >= 0 && bulletCol < 120) {
            screenArray[bulletRow][bulletCol] = bullet;
        }

        if ((bulletRow >= RobotRow && bulletRow <= RobotRow + 14) && bulletCol > 100) ct++;
    }
}
void DrawLazer(char screenArray[1000][1000], int rGhost, int cGhost, int& e) {
    char Lazer[] = { '-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-',' ','-',' ','-','-','-' };
    for (int c = 101; c >= e; c--) {
        if (rGhost < 80 && cGhost + c < 120) {
            if (Lazer[c] != ' ') {
                screenArray[rGhost][cGhost + c] = Lazer[c];
            }
        }
    }
}



//XO
void challenge(char screenArray[1000][1000], int rText, int cText)
{
    char Challenge[4][32] =
    {
        {'R','o','b','o','t',' ','W','o','u','l','d',' ','L','i','k','e',' ','T','o',' ','C','a','l','l','e','n','g','e',' ','Y','o','u'},
        {' ',' ',' ',' ','I','n',' ','A',' ','G','a','m','e',' ','O','f',' ','T','i','c',' ','T','a','c',' ','T','o','e',' ',' ',' ',' '},
        {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {'P','E','S','S',' ','Y',' ','T','O',' ','A','C','C','E','P','T',' ','O','R',' ','N',' ','T','O',' ','D','E','C','L','I','N','E'}
    };
    for (int r = 0; r < 4; r++) {
        for (int c = 0; c < 32; c++) {
            if (rText + r < 80 && cText + c < 120)
                screenArray[rText + r][cText + c] = Challenge[r][c];
        }
    }
}
Size SpriteHead(char screenArray[1000][1000], int rSprite, int cSprite) {
    char Sprite[3][5] = {
        {' ','_','_','_',' ' },
        {'/','.','_','.','\\'},
        {'\\','_','_','_','/'},
    };
    for (int r = 0; r < 3; r++) {
        for (int c = 0; c < 5; c++) {
            char ch = Sprite[r][c];
            int R = rSprite + r;
            int C = cSprite + c;
            if (ch != ' ' && R >= 0 && R < 25 && C >= 0 && C < 120)
                screenArray[R][C] = ch;
        }
    }
    Size s; s.X = 3; s.Y = 5;
    return s;
}
Size RobotHead(char screenArray[1000][1000], int rRobot, int cRobot) {
    char Robot[6][9] = {
        {' ', ' ', ' ', ' ', 'o', ' ', ' ', ' ', ' '},
        {' ', '_', '_', '_', '|', '_', '_', '_', ' '},
        {'|', ' ', '\\', ' ', ' ', ' ', '/', ' ', '|'},
        {'|', ' ', '0', ' ', ' ', ' ', '0', ' ', '|'},
        {'|', ' ', ' ', ' ', '-', ' ', ' ', ' ', '|'},
        {' ', '-', '_', '_', '_', '_', '_', '-', ' '}
    };

    for (int r = 0; r < 6; r++) {
        for (int c = 0; c < 9; c++) {
            char ch = Robot[r][c];
            int R = rRobot + r;
            int C = cRobot + c;
            if (ch != ' ' && R >= 0 && R < 25 && C >= 0 && C < 120)
                screenArray[R][C] = ch;
        }
    }
    Size s; s.X = 6; s.Y = 9;
    return s;
}
void DrawGrid(char screenArray[1000][1000]) {
    char grid[19][41] = {
        {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
        {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
        {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
        {'|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
        {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},


    };

    int startRow = 2;
    int startCol = (120 - 41) / 2;

    for (int i = 0; i < 19; i++) {
        for (int j = 0; j < 41; j++) {
            screenArray[startRow + i][startCol + j] = grid[i][j];
        }
    }
}
int CheckWin(char board[3][3])
{
    for (int i = 0; i < 3; i++) {
        if (board[i][0] != ' ' && board[i][0] == board[i][1] && board[i][1] == board[i][2])
            return board[i][0];
        if (board[0][i] != ' ' && board[0][i] == board[1][i] && board[1][i] == board[2][i])
            return board[0][i];
    }
    if (board[0][0] != ' ' && board[0][0] == board[1][1] && board[1][1] == board[2][2])
        return board[0][0];
    if (board[0][2] != ' ' && board[0][2] == board[1][1] && board[1][1] == board[2][0])
        return board[0][2];
    return 0;
}
int IsDraw(char board[3][3])
{
    for (int i = 0; i < 3; i++) {
        for (int j = 0; j < 3; j++) {
            if (board[i][j] == ' ')
                return 0;
        }
    }
    return 1;
}
void AIMove(char board[3][3], int* r, int* c) {
    for (int i = 0; i < 3; i++) {
        for (int j = 0; j < 3; j++) {
            if (board[i][j] == ' ') {
                board[i][j] = 'O';
                if (CheckWin(board) == 'O') {
                    *r = i;
                    *c = j;
                    return;
                }
                board[i][j] = ' ';
            }
        }
    }

    for (int i = 0; i < 3; i++) {
        for (int j = 0; j < 3; j++) {
            if (board[i][j] == ' ') {
                board[i][j] = 'X';
                if (CheckWin(board) == 'X') {
                    board[i][j] = 'O';
                    *r = i;
                    *c = j;
                    return;
                }
                board[i][j] = ' ';
            }
        }
    }

    if (board[1][1] == ' ') {
        *r = 1;
        *c = 1;
        return;
    }

    int corners[4][2] = { {0,0}, {0,2}, {2,0}, {2,2} };
    for (int i = 0; i < 4; i++) {
        int ri = corners[i][0];
        int ci = corners[i][1];
        if (board[ri][ci] == ' ') {
            *r = ri;
            *c = ci;
            return;
        }
    }

    int sides[4][2] = { {0,1}, {1,0}, {1,2}, {2,1} };
    for (int i = 0; i < 4; i++) {
        int ri = sides[i][0];
        int ci = sides[i][1];
        if (board[ri][ci] == ' ') {
            *r = ri;
            *c = ci;
            return;
        }
    }
}
void DrawMarks(char screenArray[1000][1000], char board[3][3], int startRow, int startCol) {
    for (int i = 0; i < 3; i++) {
        for (int j = 0; j < 3; j++) {
            int r = startRow + i * 6;
            int c = startCol + j * 13 + 4;
            if (board[i][j] == 'X') {
                SpriteHead(screenArray, r + 2, c);
            }
            else if (board[i][j] == 'O') {
                RobotHead(screenArray, r, c - 2);
            }
        }
    }
}
void ShowAnimation(char screenArray[1000][1000], int winner) {
    FillMatrixByMyBackGround(screenArray);
    if (winner == 'X' || winner == 'O') {
        for (int step = 0; step < 100; step += 10) {
            FillMatrixByMyBackGround(screenArray);
            if (winner == 'X') SpriteHead(screenArray, 10, step + 10);
            else RobotHead(screenArray, 10, step + 10);
            DispStartScreen(screenArray);
        }
    }
}
void ShowPrompt(char screenArray[1000][1000], char* message, int showEndOptions) {
    int boxTop = 8, boxLeft = 30;
    int boxWidth = 60;

    for (int i = 0; i < 5; i++) {
        for (int j = 0; j < boxWidth; j++) {
            screenArray[boxTop + i][boxLeft + j] = ' ';
        }
    }

    for (int j = 0; j < boxWidth; j++) {
        screenArray[boxTop][boxLeft + j] = '-';
        screenArray[boxTop + 4][boxLeft + j] = '-';
    }

    for (int i = 1; i < 4; i++) {
        screenArray[boxTop + i][boxLeft] = '|';
        screenArray[boxTop + i][boxLeft + boxWidth - 1] = '|';
    }

    int msgLen = 0;
    for (; message[msgLen]; msgLen++);

    int msgStart = boxLeft + (boxWidth - msgLen) / 2;
    for (int i = 0; i < msgLen; i++) {
        screenArray[boxTop + 2][msgStart + i] = message[i];
    }

    if (showEndOptions) {
        char endMsg[] = "Press Y to restart or N to quit";
        int len = 31;
        for (int i = 0; i < len; i++) {
            screenArray[boxTop + 3][boxLeft + (boxWidth - len) / 2 + i] = endMsg[i];
        }
    }
}

int main()
{
    char ScreenMatrix[1000][1000];
    int HeroRow = 8;
    int HeroCol = 7;
    int Door = 0;
    int S = 0;
    int flag = 0;
    int i = 0;
    int rPortal = 1;
    int cPortal = 70;
    int rText = 2;
    int cText = 2;
    int HeroX = 10;
    int heroY = 8;
    int Choice = 0;
    int flag1 = 0;
    int walkFrame = 0;
    char lastDir = ' ';
    int isMoving = 0;
    float Rainbow = 11;
    float rPacStart = 7, cPacStart = 75;
    int Reset = 3;

    while (1)
    {

        Rainbow -= 0.5;
        FillMatrixByMyBackGround(ScreenMatrix);
        //DispStartScreen(ScreenMatrix);
        DrawStartScreen(ScreenMatrix);
        DrawPacman(ScreenMatrix, rPacStart, cPacStart);
        if (rPacStart == 7, cPacStart == 75)
        {
            Reset = 3;
        }

        if (Choice == 1)
        {
            Reset--;
            if (Reset == 0)
            {
                rPacStart = 7, cPacStart = 75;

            }
        }
        if (Choice == 2)
        {
            Reset--;
            if (Reset == 0)
            {
                rPacStart = 7, cPacStart = 75;

            }
        }
        if (Choice == 3)
        {
            Reset--;
            if (Reset == 0)
            {
                rPacStart = 7, cPacStart = 75;

            }
        }

        if (_kbhit()) {
            char ch = _getch();
            if (ch == 'a')
            {

                rPacStart = 14, cPacStart = 22;
                Choice = 1;
                DrawPacman(ScreenMatrix, rPacStart, cPacStart);

            }
            if (ch == 's')
            {

                rPacStart = 13, cPacStart = 57;
                Choice = 2;
                DrawPacman(ScreenMatrix, rPacStart, cPacStart);

            }
            if (ch == 'd')
            {

                rPacStart = 14, cPacStart = 95;
                Choice = 3;
                DrawPacman(ScreenMatrix, rPacStart, cPacStart);

            }

            if (ch == ' ' && Choice != 1)
            {
                break;
            }
            if (ch == ' ')
            {
                flag1 = 1;

            }
        }
        if (Choice == 1)Outline(ScreenMatrix, 16, 4);
        if (Choice == 2)OutlineP(ScreenMatrix, 15, 41);
        if (Choice == 3)Outline(ScreenMatrix, 16, 78);
        GameName(ScreenMatrix, 5, 25);
        Credits(ScreenMatrix, 17, 6);
        Play(ScreenMatrix, 16, 43);
        Quit(ScreenMatrix, 17, 80);

        if (Rainbow <= 10 && Rainbow != 9.5)DispStartScreenRainbowGrey(ScreenMatrix);
        if (Rainbow <= 9.5 && Rainbow != 7.0)DispStartScreenRainbowRed(ScreenMatrix);
        if (Rainbow <= 7.0 && Rainbow != 5.5)DispStartScreenRainbowYellow(ScreenMatrix);
        if (Rainbow <= 5.5 && Rainbow != 4.0)DispStartScreenRainbowGreen(ScreenMatrix);
        if (Rainbow <= 4.0 && Rainbow != 3.5)DispStartScreenRainbowCyan(ScreenMatrix);
        if (Rainbow <= 3.5 && Rainbow != 2.0)DispStartScreenRainbowBlue(ScreenMatrix);
        if (Rainbow <= 2.0 && Rainbow != 0.5)DispStartScreenRainbowMagenta(ScreenMatrix);
        if (Rainbow == 0.5) Rainbow = 11;

        //Credits
        if (Choice == 1 && flag1 == 1)
        {
            float Rainbow = 11;
            while (1)
            {
                Rainbow -= 0.5;
                FillMatrixByMyBackGround(ScreenMatrix);
                DrawLevel1Floor(ScreenMatrix, 26);
                Size Hero = DrawHero(ScreenMatrix, 15, 100);
                NameTag(ScreenMatrix, 14, 102);
                Names(ScreenMatrix, 1, 3);
                //DispStartScreen(ScreenMatrix);
                if (Rainbow <= 10 && Rainbow != 8.5)DispStartScreenRainbowGrey(ScreenMatrix);
                if (Rainbow <= 8.5 && Rainbow != 7.0)DispStartScreenRainbowRed(ScreenMatrix);
                if (Rainbow <= 7.0 && Rainbow != 6.5)DispStartScreenRainbowYellow(ScreenMatrix);
                if (Rainbow <= 6.5 && Rainbow != 5.0)DispStartScreenRainbowGreen(ScreenMatrix);
                if (Rainbow <= 5.0 && Rainbow != 4.5)DispStartScreenRainbowCyan(ScreenMatrix);
                if (Rainbow <= 4.5 && Rainbow != 4.0)DispStartScreenRainbowBlue(ScreenMatrix);
                if (Rainbow <= 3.0 && Rainbow != 1.5)DispStartScreenRainbowMagenta(ScreenMatrix);
                if (Rainbow == 1.5) Rainbow = 11;
                if (_kbhit()) {
                    char ch = _getch();
                    if (ch == ' ')
                    {
                        Choice = 0;
                        break;
                    }
                }
                flag1 = 0;
            }
        }
    }

    if (Choice == 2)
    {
        // What is this Portal? screen
        while (1)
        {
            FillMatrixByMyBackGround(ScreenMatrix);
            DrawPortal(ScreenMatrix, rPortal, cPortal);
            DrawLevel1Floor(ScreenMatrix, 19);
            isMoving = 0;

            if (_kbhit()) {
                char key = _getch();

                if (key == 'a' || key == 'd') {
                    lastDir = key;
                    isMoving = 1;
                }

                MoveHero1(ScreenMatrix, HeroRow, HeroCol, key);
            }

            // Animate hero based on direction and movement
            if (isMoving) {
                walkFrame = 1 - walkFrame; // Toggle between 0 and 1 every frame

                if (lastDir == 'd') {
                    if (walkFrame == 0)
                        DrawHero(ScreenMatrix, HeroRow, HeroCol);     // neutral pose
                    else
                        DrawHerod(ScreenMatrix, HeroRow, HeroCol);    // walk right pose
                }
                else if (lastDir == 'a') {
                    if (walkFrame == 0)
                        DrawHero(ScreenMatrix, HeroRow, HeroCol);     // neutral pose
                    else
                        DrawHerow(ScreenMatrix, HeroRow, HeroCol);    // walk left pose
                }
            }
            else {
                DrawHero(ScreenMatrix, HeroRow, HeroCol);             // standing still
            }

            Where(ScreenMatrix, rText, cText);

            DispStartScreen(ScreenMatrix);



            if (HeroCol == 75) {
                HeroCol = 14;
                HeroRow = 12;
                break;
            }
        }

        // Woods screen
        rPortal = 24;
        cPortal = 0;
        flag = 0;
        HeroCol = 8;
        HeroRow = 31;

        while (1)
        {

            FillMatrixByMyBackGround(ScreenMatrix);
            DrawMultipleTrees(ScreenMatrix);
            DrawPortal(ScreenMatrix, rPortal, cPortal);

            if (flag == 1) DrawOpenBox(ScreenMatrix, 11, 150);

            else DrawBox(ScreenMatrix, 15, 150);

            isMoving = 0;

            if (_kbhit()) {
                char key = _getch();

                if (key == 'a' || key == 'd') {
                    lastDir = key;
                    isMoving = 1;
                }

                MoveHeroJungle(ScreenMatrix, HeroRow, HeroCol, key);
            }

            // Animate hero based on direction and movement
            if (isMoving) {
                walkFrame = 1 - walkFrame; // Toggle between 0 and 1 every frame

                if (lastDir == 'd') {
                    if (walkFrame == 0)
                        DrawHero(ScreenMatrix, HeroRow, HeroCol);     // neutral pose
                    else
                        DrawHerod(ScreenMatrix, HeroRow, HeroCol);    // walk right pose
                }
                else if (lastDir == 'a') {
                    if (walkFrame == 0)
                        DrawHero(ScreenMatrix, HeroRow, HeroCol);     // neutral pose
                    else
                        DrawHerow(ScreenMatrix, HeroRow, HeroCol);    // walk left pose
                }
            }
            else {
                DrawHero(ScreenMatrix, HeroRow, HeroCol);             // standing still
            }          
            DispToscreen1woods(ScreenMatrix, HeroCol, HeroRow);

            if ((HeroCol == 150 || HeroCol == 152 || HeroCol == 151 || HeroCol == 153) && (HeroRow == 15 || HeroRow == 20 || HeroRow == 10)) {
                flag = 1;
            }

            if (flag == 1 && ((HeroRow == 14 || HeroRow == 15 || HeroRow == 13 || HeroRow == 16) && (HeroCol == 153 || HeroCol == 154 || HeroCol == 155)))
            {
                break;
            }
        }

        // House screen
        int no1 = 0, no2 = 0, no3 = 0, no4 = 0;
        int bulletRow = HeroRow + 6;
        int bulletCol;
        int win = 0;
        HeroRow = 17;
        HeroCol = 14;
        while (1)
        {
            FillMatrixByMyBackGround(ScreenMatrix);
            DrawTree(ScreenMatrix, 16, 97);
            DrawHouse(ScreenMatrix, 0, 50);
            DrawLevel1Floor(ScreenMatrix, 28);
            isMoving = 0;

            if (_kbhit()) {
                char key = _getch();

                if (key == 'a' || key == 'd') {
                    lastDir = key;
                    isMoving = 1;
                }

                MoveHero1(ScreenMatrix, HeroRow, HeroCol, key);
            }

            // Animate hero based on direction and movement
            if (isMoving) {
                walkFrame = 1 - walkFrame; // Toggle between 0 and 1 every frame

                if (lastDir == 'd') {
                    if (walkFrame == 0)
                        DrawHeroKey(ScreenMatrix, HeroRow, HeroCol);     // neutral pose
                    else
                        DrawHeroKeyd(ScreenMatrix, HeroRow, HeroCol);    // walk right pose
                }
                else if (lastDir == 'a') {
                    if (walkFrame == 0)
                        DrawHeroKey(ScreenMatrix, HeroRow, HeroCol);     // neutral pose
                    else
                        DrawHeroKeyw(ScreenMatrix, HeroRow, HeroCol);    // walk left pose
                }
            }
            else {
                DrawHeroKey(ScreenMatrix, HeroRow, HeroCol);             // standing still
            }
            if (_kbhit()) {
                char ch = _getch();
                if (ch != ' ')isMoving = 1;

                MoveHero1(ScreenMatrix, HeroRow, HeroCol, ch);
            }
            DispStartScreen(ScreenMatrix);

            if (HeroCol > 60) break;
        }
        int Active = 0;
        while (1) {
            if (win == 0)
            {
                no1 = 0;
            }
            FillMatrixByMyBackGround(ScreenMatrix);
            DrawRoom(ScreenMatrix);
            DrawFlowerPot(ScreenMatrix, 6, 80);
            Size size = DrawSmallHero(ScreenMatrix, HeroRow, HeroCol);
            blank(ScreenMatrix, -1, 91);
            DispRoom(ScreenMatrix);

            if (_kbhit()) {
                char ch = _getch();
                MoveHero(ScreenMatrix, HeroRow, HeroCol, ch);
            }

            if (HeroCol == 12 && HeroRow == 8 && Door != 1) {
                Door = 1;
                break;
            }
            if (HeroCol == 104 && (HeroRow == 10 || HeroRow == 12) && Door != 2) {
                Door = 2;
                break;
            }
            if (HeroCol == 66 && (HeroRow == 18 || HeroRow == 20) && Door != 3) {
                Door = 3;
                break;
            }
            if (HeroRow < -1 && Door != 4)
            {
                Door = 4;
                break;
            }
        


        // Inside House
        for (int i = 0; i < 4; i++)
        {

            HeroRow = 6;
            HeroCol = 40;
            int rCt=0, cCt=0;
            while (1) {
                if (win == 0)
                {
                    no1 = 0;
                }
                FillMatrixByMyBackGround(ScreenMatrix);
                DrawRoom(ScreenMatrix);
                DrawFlowerPot(ScreenMatrix, 6, 80);
                Size size = DrawSmallHero(ScreenMatrix, HeroRow, HeroCol);
                blank(ScreenMatrix, -1, 91);
                DispRoom(ScreenMatrix);

                if (_kbhit()) {
                    char ch = _getch();
                    MoveHero(ScreenMatrix, HeroRow, HeroCol, ch);
                }

                if (HeroCol == 12 && HeroRow == 8 && Door != 1) {
                    Door = 1;
                    break;
                }
                if (HeroCol == 104 && (HeroRow == 10 || HeroRow == 12) && Door != 2) {
                    Door = 2;
                    break;
                }
                if (HeroCol == 66 && (HeroRow == 18 || HeroRow == 20) && Door != 3) {
                    Door = 3;
                    break;
                }
                if (HeroRow < -1 && Door != 4)
                {
                    Door = 4;
                    break;
                }
            }
            if (Door == 1 && no1 != 1)
            {
                int RobotRow = 10;
                int RobotCol = 94;
                int dir = 1;
                int ct = 0;
                HeroCol = 4;
                int e = 100;
                int ctlazer = 20;
                int ctwait = 0;
                int ctoflas = 0;
                int lastimer = 3;
                int ctlasdeath = 0;
                int bulletRow = -1;
                int bulletCol = -1;
                char bulletDirection = 'R';

                while (true) {
                    FillMatrixByMyBackGround(ScreenMatrix);
                    DrawRobotRoom(ScreenMatrix, 0, 0);

                    MoveRobot(RobotRow, RobotCol, dir);

                    if (ct == 0) {
                        DrawHeart(ScreenMatrix, 0, 30);
                        DrawHeart(ScreenMatrix, 0, 40);
                        DrawHeart(ScreenMatrix, 0, 50);
                        DrawHeart(ScreenMatrix, 0, 60);
                        DrawHeart(ScreenMatrix, 0, 70);
                    }
                    if (ct == 1) {
                        DrawHeart(ScreenMatrix, 0, 30);
                        DrawHeart(ScreenMatrix, 0, 40);
                        DrawHeart(ScreenMatrix, 0, 50);
                        DrawHeart(ScreenMatrix, 0, 60);
                    }
                    if (ct == 2) {
                        DrawHeart(ScreenMatrix, 0, 30);
                        DrawHeart(ScreenMatrix, 0, 40);
                        DrawHeart(ScreenMatrix, 0, 50);
                    }
                    if (ct == 3) {
                        DrawHeart(ScreenMatrix, 0, 30);
                        DrawHeart(ScreenMatrix, 0, 40);
                    }
                    if (ct == 4) {
                        DrawHeart(ScreenMatrix, 0, 30);
                    }
                    Size RobotSize = DrawRobot(ScreenMatrix, RobotRow, RobotCol);
                    Size heroSize = DrawHeroGunRight(ScreenMatrix, HeroRow, HeroCol);
                    if (ctlazer < 10) {
                        DrawLazer(ScreenMatrix, RobotRow + 3, 0, e);
                        if (e >= 0) {
                            e -= 10;
                        }
                    }

                    if (ctlazer > 0) {
                        ctlazer--;
                    }

                    if (ctlazer == 0 && e <= 0) {
                        ctwait++;
                    }
                    if (ctwait >= 2 && ctoflas <= 2) {
                        ctwait = 0;
                        ctlazer = 23;
                        e = 101;
                        ctoflas++;
                    }
                    if (ctwait >= 2 && ctoflas > 2) {
                        ctwait = 0;
                        ctlazer = 17;
                        e = 101;
                        ctoflas++;
                    }
                    if (ctwait > 0 && RobotRow + 3 <= HeroRow && RobotRow + 3 >= HeroRow + 12) {

                    }
                    if (ctwait > 0 && RobotRow + 3 <= HeroRow + 12 && RobotRow + 3 >= HeroRow) {
                        ctlasdeath++;
                    }
                    if (ctlasdeath == 2) {
                        while (1) {
                            FillMatrixByMyBackGround(ScreenMatrix);
                            DrawStartScreen(ScreenMatrix);
                            GmaeOver(ScreenMatrix, 10, 35);
                            DispStartScreenOver(ScreenMatrix);
                            if (_kbhit()) {
                                char ch = _getch();
                                if (ch == ' ')break;
                            }
                        }
                        Door = 0;
                        win = 0;
                        no1 = 0;
                        i--;
                        break;
                    }
                    if (_kbhit()) {
                        char ch = _getch();
                        MoveHero2(ScreenMatrix, HeroRow, HeroCol, ch, heroSize, RobotRow, ct);

                        if (ch == ' ' && bulletCol == -1) {
                            bulletRow = HeroRow + 6;
                            bulletCol = HeroCol + 18;
                            bulletDirection = 'R';
                        }
                    }

                    if (bulletCol != -1)
                    {
                        if (bulletRow >= 0 && bulletRow < 80 && bulletCol >= 0 && bulletCol < 120) {
                            ScreenMatrix[bulletRow][bulletCol] = ' ';
                        }

                        if (bulletDirection == 'R') bulletCol += 10;

                        if (bulletRow < 0 || bulletRow >= 80 || bulletCol < 0 || bulletCol >= 120)
                        {
                            bulletCol = -1;
                        }
                        else
                        {
                            ScreenMatrix[bulletRow][bulletCol] = '*';

                            if ((bulletRow >= RobotRow && bulletRow <= RobotRow + 14) && bulletCol > 100) {
                                ct++;
                                bulletCol = -1;
                            }
                        }
                    }

                    DispToscreen(ScreenMatrix, HeroX, heroY);

                    if (ct == 5) {
                        win = 1;
                        no1 = 1;
                        break;
                    }
                }

                HeroRow = 6;
                HeroCol = 40;
                no1 = 1;
            }
            if (Door == 1 && no1 == 1)
            {
                while (1) {
                    FillMatrixByMyBackGround(ScreenMatrix);
                    DrawStartScreen(ScreenMatrix);
                    challenge(ScreenMatrix, 12, 45);
                    DispStartScreen(ScreenMatrix);
                    if (_kbhit()) {
                        char ch = _getch();
                        if (ch == 'n') {
                            break;
                        }

                        if (ch == 'y') {
                            int spriteWins = 0;
                            int robotWins = 0;

                            while (1) {
                                char board[3][3];
                                int row = 0, col = 0;

                                for (int i = 0; i < 3; i++)
                                    for (int j = 0; j < 3; j++)
                                        board[i][j] = ' ';

                                while (1) {
                                    FillMatrixByMyBackGround(ScreenMatrix);
                                    DrawGrid(ScreenMatrix);
                                    DrawMarks(ScreenMatrix, board, 2, 40);

                                    int cursorR = 3 + row * 6 + 2;
                                    int cursorC = 40 + col * 13 + 4;

                                    ScreenMatrix[cursorR][cursorC] = '[';
                                    ScreenMatrix[cursorR][cursorC + 5] = ']';

                                    char sw[] = "Sprite Wins: ";
                                    char rw[] = "Robot Wins: ";
                                    int k = 0;
                                    while (sw[k]) { ScreenMatrix[0][k] = sw[k]; k++; }
                                    ScreenMatrix[0][k++] = '0' + spriteWins;
                                    k = 0;
                                    while (rw[k]) { ScreenMatrix[1][k] = rw[k]; k++; }
                                    ScreenMatrix[1][k++] = '0' + robotWins;

                                    DispStartScreen(ScreenMatrix);

                                    char key = _getch();
                                    if (key == 'w' && row > 0) row--;
                                    if (key == 's' && row < 2) row++;
                                    if (key == 'a' && col > 0) col--;
                                    if (key == 'd' && col < 2) col++;
                                    if (key == ' ') {
                                        if (board[row][col] == ' ') {
                                            board[row][col] = 'X';
                                            if (CheckWin(board) || IsDraw(board)) break;

                                            int rAI, cAI;
                                            AIMove(board, &rAI, &cAI);
                                            board[rAI][cAI] = 'O';
                                            if (CheckWin(board) || IsDraw(board)) break;
                                        }
                                    }

                                }

                                int result = CheckWin(board);
                                if (result == 'X') spriteWins++;
                                if (result == 'O') robotWins++;

                                ShowAnimation(ScreenMatrix, result);

                                FillMatrixByMyBackGround(ScreenMatrix);
                                DrawGrid(ScreenMatrix);
                                DrawMarks(ScreenMatrix, board, 2, 40);

                                char message[20];

                                if (result == 'X') {
                                    for (int i = 0; i < 13; i++) message[i] = "Sprite Wins!"[i];
                                    message[13] = '\0';
                                }
                                else if (result == 'O') {
                                    for (int i = 0; i < 12; i++) message[i] = "Robot Wins!"[i];
                                    message[12] = '\0';
                                }
                                else {
                                    for (int i = 0; i < 13; i++) message[i] = "It's a Draw!"[i];
                                    message[13] = '\0';
                                }

                                int endGame;
                                if ((result == 'O') && (robotWins == 3)) {
                                    endGame = 1;
                                }
                                else {
                                    endGame = 0;
                                }

                                ShowPrompt(ScreenMatrix, message, endGame);


                                DispStartScreen(ScreenMatrix);

                                char choice = 0;

                                while (choice != ' ' && choice != 'y' && choice != 'n')
                                {
                                    choice = _getch();
                                }
                                if (result == 'X' && spriteWins == 3)break;

                                if (robotWins == 3) {
                                    if (choice == 'n') break;
                                    if (choice == 'y') {
                                        spriteWins = 0;
                                        robotWins = 0;
                                    }
                                }
                            }
                            break;
                        }
                    }
                }
            }

            if (Door == 2 && no2 != 1)
            {
                int rPac = 5, cPac = 5;
                int rghost1 = 3, cghost1 = 7;

                int Powerup = 0;
                if (Door == 2 && no2 != 1)
                {
                    int rPac = 30, cPac = 76;

                    int rShoot = rPac, cShoot = cPac;

                    int cflag = 0;

                    int rMap = 0, cMap = 0;

                    int directionof2 = 1;
                    int directionof3 = 1;
                    int directionof4 = 1;
                    int directionof5 = 1;
                    int directionof6 = 1;
                    int directionof7 = 1;
                    int directionof8 = 1;
                    int rCter = 0, cCter = 0;

                    int AppleCt = 0;
                    int rApple1 = 5, cApple1 = 104;
                    int rApple2 = 5, cApple2 = 130;
                    int rApple3 = 35, cApple3 = 199;
                    int rApple4 = 34, cApple4 = 124;
                    int rApple5 = 29, cApple5 = 57;
                    int rApple6 = 25, cApple6 = 22;
                    int rApple7 = 45, cApple7 = 57;
                    int rApple8 = 5, cApple8 = 200;
                    int rApple9 = 76, cApple9 = 31;
                    int rApple10 = 45, cApple10 = 199;

                    int rghost1 = 3, cghost1 = 7;
                    int rghost2 = 52, cghost2 = 8;
                    int rghost3 = 4, cghost3 = 56;
                    int rghost4 = 4, cghost4 = 150;
                    int rghost5 = 18, cghost5 = 94;
                    int rghost6 = 17, cghost6 = 114;
                    int rghost7 = 8, cghost7 = 155;
                    int rghost8 = 29, cghost8 = 7;
                    int rVal = rPac - 5, cVal = cPac - 5;

                    while (true)
                    {

                        FillMatrixByMyBackGround(ScreenMatrix);
                        Size pacmanmapp = PacmanMap(ScreenMatrix, rMap, cMap);
                        Size PacmanSize = DrawPacman(ScreenMatrix, rPac, cPac);
                        if (_kbhit()) {
                            char ch = _getch();
                            MovePacman(ScreenMatrix, rPac, cPac, ch, rVal, cVal);
                        }



                        no2 = 1;

                        DrawApple(ScreenMatrix, rApple1, cApple1);
                        DrawApple(ScreenMatrix, rApple2, cApple2);
                        DrawApple(ScreenMatrix, rApple3, cApple3);
                        DrawApple(ScreenMatrix, rApple4, cApple4);
                        DrawApple(ScreenMatrix, rApple5, cApple5);
                        DrawApple(ScreenMatrix, rApple6, cApple6);
                        DrawApple(ScreenMatrix, rApple7, cApple7);
                        DrawApple(ScreenMatrix, rApple8, cApple8);
                        DrawApple(ScreenMatrix, rApple9, cApple9);
                        DrawApple(ScreenMatrix, rApple10, cApple10);

                        DrawGhost(ScreenMatrix, rghost1, cghost1);
                        DrawGhost(ScreenMatrix, rghost2, cghost2);
                        DrawGhost(ScreenMatrix, rghost3, cghost3);
                        DrawGhost(ScreenMatrix, rghost4, cghost4);
                        DrawGhost(ScreenMatrix, rghost5, cghost5);
                        DrawGhost(ScreenMatrix, rghost6, cghost6);
                        DrawGhost(ScreenMatrix, rghost7, cghost7);
                        DrawGhost(ScreenMatrix, rghost8, cghost8);

                        //kill conditions
                        if (
                            (rPac >= rghost1 && rPac < rghost1 + 4) && (cPac >= cghost1 && cPac < cghost1 + 5) ||
                            (rPac >= rghost2 && rPac < rghost2 + 4) && (cPac >= cghost2 && cPac < cghost2 + 5) ||
                            (rPac >= rghost3 && rPac < rghost3 + 4) && (cPac >= cghost3 && cPac < cghost3 + 5) ||
                            (rPac >= rghost4 && rPac < rghost4 + 4) && (cPac >= cghost4 && cPac < cghost4 + 5) ||
                            (rPac >= rghost5 && rPac < rghost5 + 4) && (cPac >= cghost5 && cPac < cghost5 + 5) ||
                            (rPac >= rghost6 && rPac < rghost6 + 4) && (cPac >= cghost6 && cPac < cghost6 + 5) ||
                            (rPac >= rghost7 && rPac < rghost7 + 4) && (cPac >= cghost7 && cPac < cghost7 + 5) ||
                            (rPac >= rghost8 && rPac < rghost8 + 4) && (cPac >= cghost8 && cPac < cghost8 + 5)

                            )

                        {
                            while (1) {
                                FillMatrixByMyBackGround(ScreenMatrix);
                                DrawStartScreen(ScreenMatrix);
                                GmaeOver(ScreenMatrix, 10, 35);
                                DispStartScreenPacOver(ScreenMatrix);
                                if (_kbhit()) {
                                    char ch = _getch();
                                    if (ch == ' ')break;
                                }
                            }
                            Door = 0;
                            win = 0;
                            no2 = 0;
                            i--;

                            break;


                        }

                        //ghost2 movement
                        if (ScreenMatrix[rghost2][cghost2 + 1] != '8' && cghost2 <= 200 && directionof2 == 1)
                        {
                            cghost2++;
                            if (cghost2 == 200)
                            {
                                directionof2 *= -1;
                            }
                        }
                        if (ScreenMatrix[rghost2][cghost2 - 2] != '8' && cghost2 >= 7 && directionof2 == -1)
                        {
                            cghost2--;
                            if (cghost2 == 7)
                            {
                                directionof2 *= -1;
                            }
                        }


                        //ghost1 movement

                        if (ScreenMatrix[rghost1 + 1][cghost1] != '8' && cghost1 < 8)
                        {
                            if (rghost1 != 17)
                            {
                                rghost1++;
                            }

                        }

                        if (ScreenMatrix[rghost1][cghost1 + 1] != '8' && rghost1 == 17)
                        {
                            if (cghost1 != 27)
                            {
                                cghost1++;
                            }

                        }

                        if (ScreenMatrix[rghost1 - 1][cghost1] != '8' && cghost1 == 27 && rghost1 != 3)
                        {
                            if (rghost1 != 3)
                            {
                                rghost1--;
                            }

                        }

                        if (ScreenMatrix[rghost1][cghost1 - 1] != '8' && cghost1 != 7 && rghost1 == 3)
                        {
                            if (rghost1 == 3)
                            {
                                cghost1--;
                            }

                        }
                        //ghost3 movement


                        if (ScreenMatrix[rghost3][cghost3 - 1] != '8' && rghost3 < 31 && directionof3 == 1)
                        {
                            rghost3++;
                            if (rghost3 == 28)
                            {
                                directionof3 *= -1;
                            }
                        }

                        if (ScreenMatrix[rghost3][cghost3 - 1] != '8' && rghost3 > 4 && directionof3 != 1)
                        {
                            rghost3--;
                            if (rghost3 == 4)
                            {
                                directionof3 *= -1;
                            }
                        }

                        //ghost4 movement
                        if (ScreenMatrix[rghost4][cghost4 - 1] != '8' && cghost4 < 200 && directionof4 == 1)
                        {
                            cghost4++;
                            if (cghost4 == 200)
                            {
                                directionof4 *= -1;
                            }
                        }
                        if (ScreenMatrix[rghost4][cghost4 - 1] != '8' && cghost4 > 150 && directionof4 != 1)
                        {
                            cghost4--;
                            if (cghost4 == 150)
                            {
                                directionof4 *= -1;
                            }
                        }

                        //ghost5 movement
                        if (ScreenMatrix[rghost5][cghost5 - 1] != '8' && rghost5 < 23 && directionof5 == 1)
                        {
                            rghost5++;
                            if (rghost5 == 23)
                            {
                                directionof5 *= -1;
                            }
                        }
                        if (ScreenMatrix[rghost5][cghost5 - 1] != '8' && rghost5 > 18 && directionof5 != 1)
                        {
                            rghost5--;
                            if (rghost5 == 18)
                            {
                                directionof5 *= -1;
                            }
                        }

                        //ghost6 movement
                        if (ScreenMatrix[rghost6][cghost6 - 1] != '8' && cghost6 < 200 && directionof6 == 1)
                        {

                            cghost6++;

                            if (cghost6 == 200)
                            {
                                directionof6 *= -1;
                            }
                        }
                        if (ScreenMatrix[rghost6][cghost6 - 1] != '8' && cghost6 > 113 && directionof6 != 1)
                        {

                            cghost6--;


                            if (cghost6 == 113)
                            {
                                directionof6 *= -1;
                            }
                        }

                        // ghost7 movement
                        if (ScreenMatrix[rghost7 - 1][cghost7] != '8' && rghost7 < 34 && directionof7 == 1) {
                            rghost7++;
                            if (rghost7 == 34) {
                                directionof7 *= -1;
                            }
                        }
                        if (ScreenMatrix[rghost7 - 1][cghost7] != '8' && rghost7 > 8 && directionof7 != 1) {
                            rghost7--;
                            if (rghost7 == 8) {
                                directionof7 *= -1;
                            }
                        }

                        // ghost8 movement
                        if (ScreenMatrix[rghost8 + 1][cghost8] != '8' && cghost8 == 7) {
                            if (rghost8 != 37) {
                                rghost8++;
                            }
                        }

                        if (ScreenMatrix[rghost8][cghost8 + 1] != '8' && rghost8 == 37) {
                            if (cghost8 != 40) {
                                cghost8++;
                            }
                        }

                        if (ScreenMatrix[rghost8 - 1][cghost8] != '8' && cghost8 == 40) {
                            if (rghost8 != 27) {
                                rghost8--;
                            }
                        }

                        if (ScreenMatrix[rghost8][cghost8 - 1] != '8' && rghost8 == 27) {
                            if (cghost8 != 7) {
                                cghost8--;
                            }
                        }




                        if ((rPac < rApple1 + 2 && rPac + 3 > rApple1 && cPac < cApple1 + 3 && cPac + 5 > cApple1)) {
                            rApple1 = 1000; cApple1 = 1000;
                            AppleCt++;
                        }
                        if ((rPac < rApple2 + 2 && rPac + 3 > rApple2 && cPac < cApple2 + 3 && cPac + 5 > cApple2)) {
                            rApple2 = 1000; cApple2 = 1000;
                            AppleCt++;
                        }
                        if ((rPac < rApple3 + 2 && rPac + 3 > rApple3 && cPac < cApple3 + 3 && cPac + 5 > cApple3)) {
                            rApple3 = 1000; cApple3 = 1000;
                            AppleCt++;
                        }
                        if ((rPac < rApple4 + 2 && rPac + 3 > rApple4 && cPac < cApple4 + 3 && cPac + 5 > cApple4)) {
                            rApple4 = 1000; cApple4 = 1000;
                            AppleCt++;
                        }
                        if ((rPac < rApple5 + 2 && rPac + 3 > rApple5 && cPac < cApple5 + 3 && cPac + 5 > cApple5)) {
                            rApple5 = 1000; cApple5 = 1000;
                            AppleCt++;
                        }
                        if ((rPac < rApple6 + 2 && rPac + 3 > rApple6 && cPac < cApple6 + 3 && cPac + 5 > cApple6)) {
                            rApple6 = 1000; cApple6 = 1000;
                            AppleCt++;
                        }
                        if ((rPac < rApple7 + 2 && rPac + 3 > rApple7 && cPac < cApple7 + 3 && cPac + 5 > cApple7)) {
                            rApple7 = 1000; cApple7 = 1000;
                            AppleCt++;
                        }
                        if ((rPac < rApple8 + 2 && rPac + 3 > rApple8 && cPac < cApple8 + 3 && cPac + 5 > cApple8)) {
                            rApple8 = 1000; cApple8 = 1000;
                            AppleCt++;
                        }
                        if ((rPac < rApple9 + 2 && rPac + 3 > rApple9 && cPac < cApple9 + 3 && cPac + 5 > cApple9)) {
                            rApple9 = 1000; cApple9 = 1000;
                            AppleCt++;
                        }
                        if ((rPac < rApple10 + 2 && rPac + 3 > rApple10 && cPac < cApple10 + 3 && cPac + 5 > cApple10)) {
                            rApple10 = 1000; cApple10 = 1000;
                            AppleCt++;
                        }



                        if (AppleCt == 7)
                        {
                            break;
                        }

                        if (rPac - 12 >= 0)rCt = rPac-12;
                        if (cPac - 60 >=0)cCt = cPac-60;
                        AppleCollected(ScreenMatrix, AppleCt, rCt, cCt);

                        DispToscreen1Pac(ScreenMatrix, cPac, rPac);
                    }

                }

            }

            if (Door == 3 && no3 != 1)
            {
                while (true)
                {
                    int HeroRow = 71;
                    int HeroCol = 80;
                    int no3 = 1;
                    int ct = 0;
                    int flagouch = 1;
                    int ghostst = 0;
                    int ctno1 = 0;
                    int ctno2 = 0;
                    int ctno3 = 0;
                    int ctdown = 0;
                    int ctdouble = 0;
                    int Flagpickaxe = 0;
                    int Flagpickaxepl = 0;
                    int flagwall = 0;
                    int frogr = 48;
                    int frogc = 87;
                    int ctmovefrog = 1;
                    int startfightfrog = 0;
                    int e = frogc;
                    int Frogright = 0;
                    int Frogleft = 1;
                    int j = 0;
                    int direc = 0;
                    int ctbullet = 0;
                    int y[5] = { -1,-1,-1,-1,-1 };
                    int c1 = -1;
                    int c2 = -1;
                    int c3 = -1;
                    int c4 = -1;
                    int c5 = -1;
                    int rb;
                    int rc;
                    int x[5] = { -1,-1,-1,-1,-1 };
                    int pos;
                    int stand = 0;
                    int f = frogc - 2;
                    int flagjump = 0;
                    int t = -1;
                    int firstjump = 3;
                    int flagjumpp = 0;
                    int hgl = 0;
                    int rEle = 39, cEle = 110;
                    int Eletime = 20;
                    int EleUp = 100;
                    int flagelv = 0;
                    int elvr = 39;
                    int elvc = 110;
                    while (true)
                    {
                        if (HeroCol < 40 && HeroRow < 20)break;
                        int no3 = 1;
                        FillMatrixByMyBackGround(ScreenMatrix);
                        DrawFrogRoom(ScreenMatrix, 0, 0);



                        if (flagouch == 1 && ctno1 == 0) {
                            Ouch(ScreenMatrix, 68, 80);
                            Fall(ScreenMatrix, 69, 80);
                            if (HeroCol < 45) {
                                flagouch = 2;
                                ctno1 = 1;
                            }
                        }
                        if (flagouch == 2 && ctno2 == 0 && Flagpickaxe == 0) {
                            Ladd(ScreenMatrix, 69, 35);
                        }
                        if (flagouch == 2 && HeroRow + 12 < 55) {
                            flagouch = 3;
                            ctno2 = 1;
                        }

                        if (HeroRow + 12 <= 60) {
                            Flagpickaxe = 1;
                        }
                        if (Flagpickaxe == 1 && ctno3 == 0) {
                            Pickaxe(ScreenMatrix, 41, 1);

                        }
                        if (Flagpickaxe == 1 && HeroRow + 12 > 70) {
                            ctno3 = 1;
                        }
                        if (ctno3 == 1 && HeroRow + 12 == 83 && HeroCol > 105) {
                            Flagpickaxepl = 1;

                        }

                        if (flagwall == 0) {
                            DrawWall(ScreenMatrix, 27, 30);
                        }
                        if (Flagpickaxepl == 1 && HeroRow + 12 == 55 && HeroCol > 35) {
                            flagwall = 1;

                        }
                        if (Flagpickaxepl == 2 && hgl == 0) {
                            DrawHeroGunRight(ScreenMatrix, HeroRow, HeroCol);
                        }
                        if (hgl == 1) {
                            DrawHeroGunLeft(ScreenMatrix, HeroRow, HeroCol);
                        }
                        if (Flagpickaxepl == 1) {
                            DrawHeroAxe(ScreenMatrix, HeroRow, HeroCol);
                        }
                        if (Flagpickaxepl == 0) {
                            Size size = DrawHero(ScreenMatrix, HeroRow, HeroCol);
                        }

                        if (flagwall == 1) {
                            ctmovefrog++;
                        }
                        if (ctmovefrog == 3) {
                            frogr -= 4;

                        }
                        if (ctmovefrog == 4) {
                            frogc -= 2;
                        }
                        if (ctmovefrog == 5) {
                            frogr += 4;

                        }
                        if (ctmovefrog == 7) {
                            frogr -= 4;

                        }
                        if (ctmovefrog == 8) {
                            frogc -= 2;
                        }
                        if (ctmovefrog == 9) {
                            frogr += 4;

                        }
                        if (ctmovefrog > 12 && ctmovefrog < 20) {
                            Oops(ScreenMatrix, 40, 50);
                        }
                        if (ctmovefrog == 25) {
                            Flagpickaxepl = 2;
                        }
                        if (ctmovefrog == 30) {
                            startfightfrog = 1;
                            direc = 1;
                        }
                        if (startfightfrog == 1) {

                            if (direc == 1 && frogc > 0 && stand == 0) {
                                Frogright == 0;
                                Frogleft == 1;
                                if (j == 0) {
                                    frogr -= 4;
                                    frogc -= 2;

                                }
                                j++;
                                if (j == 2) {
                                    frogr += 4;
                                    j = 0;
                                }
                                firstjump = 2;

                            }
                            if (frogc <= HeroCol + 25 && stand == 0) {
                                frogr -= 4;
                                frogr = 48;
                                stand = 1;
                            }
                            if (frogc <= HeroCol + 25 && stand == 1) {
                                frogr += 4;
                                frogr = 48;
                                stand = 2;
                            }




                        }
                        if (flagelv == 0) {
                            DrawElevator(ScreenMatrix, elvr, elvc);
                        }
                        if (Frogleft == 1) {
                            FrogLeft(ScreenMatrix, frogr, frogc);
                        }
                        if (Frogright == 1) {
                            FrogRight(ScreenMatrix, frogr, frogc);
                        }
                        if (startfightfrog == 1 && hgl == 0) {

                            for (int s = 0; s < 5; s++) {
                                if (x[s] != -1 && y[s] != -1) {
                                    y[s]++;
                                }
                            }
                            for (int s = 0; s < 5; s++) {
                                if (x[s] != -1 && y[s] != -1 && ScreenMatrix[x[s]][y[s]] == ' ') {
                                    ScreenMatrix[x[s]][y[s]] = '*';
                                }
                                else {
                                    y[s] = 125;

                                }
                            }

                            for (int s = 0; s < 5; s++) {
                                if (y[s] > 124) {
                                    pos = s;

                                    if (pos == 0) {
                                        ctbullet = 0;
                                    }
                                    if (pos == 1) {
                                        ctbullet = 1;
                                    }
                                    if (pos == 2) {
                                        ctbullet = 2;
                                    }
                                    if (pos == 3) {
                                        ctbullet = 3;
                                    }
                                    if (pos == 4) {
                                        ctbullet = 4;
                                    }
                                }
                            }

                        }
                        if (hgl == 1) {
                            for (int s = 0; s < 5; s++) {
                                if (x[s] != -1 && y[s] != -1) {
                                    y[s]--;
                                }
                            }
                            for (int s = 0; s < 5; s++) {
                                if (x[s] != -1 && y[s] != -1 && ScreenMatrix[x[s]][y[s]] == ' ') {
                                    ScreenMatrix[x[s]][y[s]] = '*';
                                }
                                else {
                                    y[s] = -1;

                                }
                                if (y[s] == frogc)
                                {
                                    i = 4;
                                }
                            }
                            for (int s = 0; s < 5; s++) {
                                if (y[s] < 0) {
                                    pos = s;

                                    if (pos == 0) {
                                        ctbullet = 0;
                                    }
                                    if (pos == 1) {
                                        ctbullet = 1;
                                    }
                                    if (pos == 2) {
                                        ctbullet = 2;
                                    }
                                    if (pos == 3) {
                                        ctbullet = 3;
                                    }
                                    if (pos == 4) {
                                        ctbullet = 4;
                                    }
                                }
                            }
                        }
                        if (hgl == 1) {
                            t++;

                            if (t > -1 && t < 10) {
                                DrawToungehgl(ScreenMatrix, frogr + 3, frogc + 17, f, stand);
                            }
                            if (t > 13 && t < 23) {
                                f = frogc + 20;
                            }
                            if (t > 23 && t < 33) {

                                DrawToungehgl(ScreenMatrix, frogr + 3, frogc + 17, f, stand);
                            }
                            if (t > 33 && t < 43) {
                                f = frogc + 20;
                            }
                            if (t > 43 && t < 53) {
                                DrawToungehgl(ScreenMatrix, frogr + 3, frogc + 17, f, stand);

                            }
                            if (t > 53 && t < 63) {
                                f = frogc + 20;
                            }
                            if (t > 63 && t < 73) {
                                DrawToungehgl(ScreenMatrix, frogr + 3, frogc + 17, f, stand);

                            }
                            if (t > 80) {
                                t = 0;
                            }
                        }

                        if (startfightfrog == 1 && hgl == 0) {

                            if (stand > 1 && hgl == 0) {
                                t++;
                            }


                            if (stand > 1) {

                                if (t > -1 && t < 10) {
                                    DrawTounge(ScreenMatrix, frogr + 3, frogc, f, stand);
                                }
                                if (t > 13 && t < 23) {
                                    f = frogc - 2;
                                }
                                if (t > 23 && t < 33) {

                                    DrawTounge(ScreenMatrix, frogr + 3, frogc, f, stand);
                                }
                                if (t > 33 && t < 43) {
                                    f = frogc - 2;
                                }
                                if (t > 43 && t < 53) {
                                    DrawTounge(ScreenMatrix, frogr + 3, frogc, f, stand);

                                }
                                if (t > 53 && t < 63) {
                                    f = frogc - 2;
                                }
                                if (t > 63 && t < 73) {
                                    DrawTounge(ScreenMatrix, frogr + 3, frogc, f, stand);

                                }
                                if (t > 80) {
                                    stand = -2;
                                    flagjump = 1;
                                }


                            }

                        }
                        if (HeroCol > 110 && HeroRow + 12 == 55) {
                            flagelv = 1;
                        }
                        if (flagelv == 1) {
                            DrawElevator(ScreenMatrix, elvr, elvc);
                            if (elvr + 16 > 27) {
                                elvr--;
                                HeroRow--;
                            }
                            if (elvr + 16 == 27) {
                                HeroRow + 12 == 27;

                                flagelv = 0;
                            }

                        }
                        if (HeroRow + 12 == 27 && HeroCol < 110) {
                            flagelv = 3;
                            DrawElevator(ScreenMatrix, elvr, elvc);
                        }
                        if (flagelv == 3 && HeroCol > 110) {
                            flagelv = 4;
                        }
                        if (flagelv == 4) {
                            DrawElevator(ScreenMatrix, elvr, elvc);
                            if (elvr + 16 < 55) {
                                elvr++;
                                HeroRow++;
                            }
                            if (elvr + 16 == 55) {
                                HeroRow + 12 == 55;

                                flagelv = 0;
                            }
                        }
                        DispToscreen1(ScreenMatrix, HeroCol, HeroRow);

                        if (HeroRow + 12 <= 83 && HeroRow + 12 > 55 && HeroCol >= 6 || HeroRow + 12 == 27) {//move right left first and last lev27
                            if (_kbhit()) {
                                char ch = _getch();
                                if (ch != ' ')
                                {
                                    MoveHeroFrogRL(ScreenMatrix, HeroRow, HeroCol, ch, size);
                                }
                                // if (ch == ' ' &&ctdown>0&&ctdouble==1) {
                                // HeroRow -= 4;
                                //     ctdouble = 2;
                                // }
                                if (ch == ' ' && HeroRow + 12 == 83 && ctdown == 0 && ctdouble == 0) {
                                    HeroRow -= 4;
                                    ctdown = 1;
                                    ctdouble = 1;
                                }


                            }
                        }
                        if (HeroRow + 12 == 83 && HeroCol < 6) {//move hero frog first floor ladder
                            if (_kbhit()) {
                                char ch = _getch();
                                if (ch != 's')
                                {
                                    MoveHeroFrog(ScreenMatrix, HeroRow, HeroCol, ch, size);
                                }
                            }
                        }
                        if (flagwall == 0) {
                            if (HeroRow + 12 <= 55 && HeroRow + 12 > 28 && HeroCol <= 37) { //move right left sec floor
                                if (_kbhit()) {
                                    char ch = _getch();
                                    MoveHeroFrogRL(ScreenMatrix, HeroRow, HeroCol, ch, size);

                                    if (ch == ' ' && ctdown > 0 && ctdouble == 1) {
                                        HeroRow -= 4;
                                        ctdouble = 2;
                                    }
                                    if (ch == ' ' && HeroRow + 12 == 55 && ctdown == 0 && ctdouble == 0) {
                                        HeroRow -= 4;
                                        ctdown = 1;
                                        ctdouble = 1;
                                    }

                                }
                            }

                            else {
                                if (HeroRow + 12 == 55 && HeroCol == 38 || HeroRow + 12 == 55 && HeroCol == 39) {
                                    if (_kbhit()) {

                                        char ch = _getch();
                                        if (ch != 'd')
                                        {
                                            MoveHeroFrogRL(ScreenMatrix, HeroRow, HeroCol, ch, size);
                                        }

                                    }
                                }

                            }
                        }
                        if (flagwall == 1 && HeroRow + 12 <= 55 && HeroRow + 12 > 28) {//move hero frog down from sec floor after wall broken
                            if (_kbhit()) {
                                char ch = _getch();

                                if (ch != ' ') {
                                    MoveHeroFrogRL(ScreenMatrix, HeroRow, HeroCol, ch, size);
                                }
                                if (ch == ' ' && ctdown > 0 && ctdown < 10 && ctdouble == 1) {
                                    HeroRow -= 4;
                                    ctdouble = 2;
                                }
                                if (ch == ' ' && HeroRow + 12 == 55 && ctdown == 0 && ctdouble == 0) {
                                    HeroRow -= 4;
                                    ctdown = 1;
                                    ctdouble = 1;
                                }
                                if (ch == 'r' && hgl == 0)
                                {
                                    ctbullet++;
                                    if (ctbullet == 1) {
                                        x[0] = HeroRow + 6;
                                        y[0] = HeroCol + 18;

                                    }
                                    if (ctbullet == 2) {
                                        x[1] = HeroRow + 6;
                                        y[1] = HeroCol + 18;
                                    }
                                    if (ctbullet == 3) {
                                        x[2] = HeroRow + 6;
                                        y[2] = HeroCol + 18;
                                    }
                                    if (ctbullet == 4) {
                                        x[3] = HeroRow + 6;
                                        y[3] = HeroCol + 18;
                                    }
                                    if (ctbullet == 5) {
                                        x[4] = HeroRow + 6;
                                        y[4] = HeroCol + 18;
                                    }

                                }
                                if (ch == 'r' && hgl == 1)
                                {
                                    ctbullet++;
                                    if (ctbullet == 1) {
                                        x[0] = HeroRow + 7;
                                        y[0] = HeroCol - 1;

                                    }
                                    if (ctbullet == 2) {
                                        x[1] = HeroRow + 7;
                                        y[1] = HeroCol + -1;
                                    }
                                    if (ctbullet == 3) {
                                        x[2] = HeroRow + 7;
                                        y[2] = HeroCol - 1;
                                    }
                                    if (ctbullet == 4) {
                                        x[3] = HeroRow + 7;
                                        y[3] = HeroCol - 1;
                                    }
                                    if (ctbullet == 5) {
                                        x[4] = HeroRow + 7;
                                        y[4] = HeroCol - 1;
                                    }

                                }
                            }
                        }
                        if (flagjump == 1)
                        {

                            if (frogr > 30 + 8 && frogc > 20) {
                                frogr -= 5;
                            }
                            if (frogc > 20) {
                                frogc -= 5;
                            }
                            if (frogc <= 20 && frogr < 47) {
                                frogr += 5;
                                flagjumpp = 2;
                            }
                            if (frogr >= 47 && flagjumpp == 2) {
                                flagjump = 2;
                                frogc = 15;
                                t = 0;
                            }





                        }
                        if (flagjump == 2) {
                            Frogright = 1;
                            Frogleft = 0;
                            hgl = 1;
                            t = 0;
                            f = frogc + 19 + 4;
                            flagjump = 3;


                        }

                        if (HeroCol <= 6 && HeroRow + 12 <= 82 && HeroRow + 12 > 55) {//LADD
                            if (_kbhit()) {
                                char ch = _getch();
                                MoveHeroFrogUD(ScreenMatrix, HeroRow, HeroCol, ch, size);


                            }
                        }


                        if (HeroCol <= 6 && HeroRow + 12 == 55) {//move hero frog down from sec floor
                            if (_kbhit()) {
                                char ch = _getch();
                                if (ch == 's') {
                                    MoveHeroFrogUD(ScreenMatrix, HeroRow, HeroCol, ch, size);
                                }


                            }
                        }


                        if (ctdown != 0) {
                            ctdown++;
                        }
                        if (ctdown > 5) {
                            if (startfightfrog == 0) {
                                if (HeroRow + 12 > 55 && HeroRow + 12 < 83) {
                                    HeroRow += 2;
                                }
                            }

                            if (HeroRow + 12 > 20 && HeroRow + 12 < 55) {
                                HeroRow += 2;
                            }

                            if (HeroRow + 12 > 1 && HeroRow + 12 < 27) {
                                HeroRow += 2;
                            }




                        }
                        if (ctdown == 10) {
                            if (startfightfrog == 0) {
                                if (HeroRow + 12 > 55 && HeroRow + 12 < 83) {
                                    HeroRow = 83 + 12;
                                }
                            }

                            if (HeroRow + 12 > 20 && HeroRow + 12 < 55) {
                                HeroRow = 55 + 12;
                            }

                            if (HeroRow + 12 > 1 && HeroRow + 12 < 27) {
                                HeroRow = 27 + 12;

                            }
                            ctdouble = 0;
                            ctdown = 0;


                        }


                    }

                    break;

                }
            }
            if (Door == 4 && no4 != 1)
            {
                int CH = ' ';
                HeroRow = 16;
                HeroCol = 55;
                int timer = 0;
                //Q1
                while (1)
                {
                    while (timer < 50)
                    {
                        timer++;
                        FillMatrixByMyBackGround(ScreenMatrix);
                        Farouk(ScreenMatrix, 0, 50);
                        DrawLevel1Floor(ScreenMatrix, 12);
                        AnswerBox(ScreenMatrix, 20, 4);
                        AnswerBox(ScreenMatrix, 20, 45);
                        AnswerBox(ScreenMatrix, 20, 84);
                        Q1(ScreenMatrix, 3, 75);
                        A1Q1(ScreenMatrix, 23, 16);
                        A2Q1(ScreenMatrix, 23, 55);
                        A3Q1(ScreenMatrix, 23, 90);
                        Size size = DrawSmallHero(ScreenMatrix, HeroRow, HeroCol);
                        if (_kbhit()) {
                            char ch = _getch();
                            MoveHeroFarouk(ScreenMatrix, HeroRow, HeroCol, ch);
                            if (ch == 'd')CH = 'd';
                            if (ch == ' ' && CH == 'd')
                            {
                                if (ScreenMatrix[HeroRow + 4][HeroCol] != ' ')
                                {
                                    HeroRow -= 4;
                                    HeroCol += 15;
                                }
                            }
                            if (ch == 'a') CH = 'a';
                            if (ch == ' ' && CH == 'a')
                            {
                                if (ScreenMatrix[HeroRow + 4][HeroCol] != ' ')
                                {
                                    HeroRow -= 4;
                                    HeroCol -= 15;
                                }
                            }

                        }
                        if (ScreenMatrix[HeroRow + 4][HeroCol] == ' ')HeroRow++;
                        DispStartScreen(ScreenMatrix);
                    }
                    timer = 0;
                    int rBox = 20;
                    while (timer < 20)
                    {
                        if (ScreenMatrix[HeroRow + 4][HeroCol] != '_')HeroRow++;
                        timer++;
                        rBox++;
                        FillMatrixByMyBackGround(ScreenMatrix);
                        FaroukD(ScreenMatrix, 0, 50);
                        DrawLevel1Floor(ScreenMatrix, 12);
                        AnswerBox(ScreenMatrix, rBox, 4);
                        AnswerBox(ScreenMatrix, rBox, 45);
                        AnswerBox(ScreenMatrix, 20, 84);
                        Q1(ScreenMatrix, 3, 75);
                        A1Q1(ScreenMatrix, rBox + 3, 16);
                        A2Q1(ScreenMatrix, rBox + 3, 55);
                        A3Q1(ScreenMatrix, 23, 90);
                        Size size = DrawSmallHero(ScreenMatrix, HeroRow, HeroCol);
                        DispStartScreen(ScreenMatrix);
                        if (HeroRow > 30)
                        {
                            while (1) {
                                FillMatrixByMyBackGround(ScreenMatrix);
                                DrawStartScreen(ScreenMatrix);
                                GmaeOver(ScreenMatrix, 10, 35);
                                DispStartScreen(ScreenMatrix);
                                if (_kbhit()) {
                                    char ch = _getch();
                                    if (ch == ' ')break;
                                }

                            }
                            break;
                        }
                    }
                    break;
                }
                HeroRow = 16;
                HeroCol = 55;


                //Q2
                while (1)
                {
                    int timer = 0;
                    while (timer < 50)
                    {
                        timer++;
                        FillMatrixByMyBackGround(ScreenMatrix);
                        Farouk(ScreenMatrix, 0, 50);
                        DrawLevel1Floor(ScreenMatrix, 12);
                        AnswerBox(ScreenMatrix, 20, 4);
                        AnswerBox(ScreenMatrix, 20, 45);
                        AnswerBox(ScreenMatrix, 20, 84);
                        Q2(ScreenMatrix, 3, 75);
                        A1Q2(ScreenMatrix, 23, 13);
                        A2Q2(ScreenMatrix, 23, 53);
                        A3Q2(ScreenMatrix, 23, 90);
                        Size size = DrawSmallHero(ScreenMatrix, HeroRow, HeroCol);
                        if (_kbhit()) {
                            char ch = _getch();
                            MoveHeroFarouk(ScreenMatrix, HeroRow, HeroCol, ch);
                            if (ch == 'd')CH = 'd';
                            if (ch == ' ' && CH == 'd')
                            {
                                if (ScreenMatrix[HeroRow + 4][HeroCol] != ' ')
                                {
                                    HeroRow -= 4;
                                    HeroCol += 15;
                                }
                            }
                            if (ch == 'a') CH = 'a';
                            if (ch == ' ' && CH == 'a')
                            {
                                if (ScreenMatrix[HeroRow + 4][HeroCol] != ' ')
                                {
                                    HeroRow -= 4;
                                    HeroCol -= 15;
                                }
                            }

                        }
                        if (ScreenMatrix[HeroRow + 4][HeroCol] == ' ')HeroRow++;
                        DispStartScreen(ScreenMatrix);
                    }
                    timer = 0;
                    int rBox = 20;
                    while (timer < 20)
                    {
                        if (ScreenMatrix[HeroRow + 4][HeroCol] != '_')HeroRow++;
                        timer++;
                        rBox++;
                        FillMatrixByMyBackGround(ScreenMatrix);
                        FaroukD(ScreenMatrix, 0, 50);
                        DrawLevel1Floor(ScreenMatrix, 12);
                        AnswerBox(ScreenMatrix, 20, 4);
                        AnswerBox(ScreenMatrix, rBox, 45);
                        AnswerBox(ScreenMatrix, rBox, 84);
                        Q2(ScreenMatrix, 3, 75);
                        A1Q2(ScreenMatrix, 23, 13);
                        A2Q2(ScreenMatrix, rBox + 3, 53);
                        A3Q2(ScreenMatrix, rBox + 3, 90);
                        Size size = DrawSmallHero(ScreenMatrix, HeroRow, HeroCol);

                        DispStartScreen(ScreenMatrix);
                        if (HeroRow > 30)
                        {
                            while (1) {
                                FillMatrixByMyBackGround(ScreenMatrix);
                                DrawStartScreen(ScreenMatrix);
                                GmaeOver(ScreenMatrix, 10, 35);
                                DispStartScreen(ScreenMatrix);
                                if (_kbhit()) {
                                    char ch = _getch();
                                    if (ch == ' ')break;
                                }

                            }
                            break;
                        }
                    }
                    break;
                }
                //Q3
                HeroRow = 16;
                HeroCol = 55;

                while (1)
                {
                    int timer = 0;
                    while (timer < 50)
                    {
                        timer++;
                        FillMatrixByMyBackGround(ScreenMatrix);
                        Farouk(ScreenMatrix, 0, 50);
                        DrawLevel1Floor(ScreenMatrix, 12);
                        AnswerBox(ScreenMatrix, 20, 4);
                        AnswerBox(ScreenMatrix, 20, 45);
                        AnswerBox(ScreenMatrix, 20, 84);
                        Q3(ScreenMatrix, 3, 75);
                        A1Q3(ScreenMatrix, 23, 13);
                        A2Q3(ScreenMatrix, 23, 55);
                        A3Q3(ScreenMatrix, 23, 88);
                        Size size = DrawSmallHero(ScreenMatrix, HeroRow, HeroCol);
                        if (_kbhit()) {
                            char ch = _getch();
                            MoveHeroFarouk(ScreenMatrix, HeroRow, HeroCol, ch);
                            if (ch == 'd')CH = 'd';
                            if (ch == ' ' && CH == 'd')
                            {
                                if (ScreenMatrix[HeroRow + 4][HeroCol] != ' ')
                                {
                                    HeroRow -= 4;
                                    HeroCol += 15;
                                }
                            }
                            if (ch == 'a') CH = 'a';
                            if (ch == ' ' && CH == 'a')
                            {
                                if (ScreenMatrix[HeroRow + 4][HeroCol] != ' ')
                                {
                                    HeroRow -= 4;
                                    HeroCol -= 15;
                                }
                            }

                        }
                        if (ScreenMatrix[HeroRow + 4][HeroCol] == ' ')HeroRow++;
                        DispStartScreen(ScreenMatrix);

                    }


                    timer = 0;
                    int rBox = 20;
                    while (timer < 20)
                    {
                        if (ScreenMatrix[HeroRow + 4][HeroCol] != '_')HeroRow++;
                        timer++;
                        rBox++;
                        FillMatrixByMyBackGround(ScreenMatrix);
                        FaroukD(ScreenMatrix, 0, 50);
                        DrawLevel1Floor(ScreenMatrix, 12);
                        AnswerBox(ScreenMatrix, rBox, 4);
                        AnswerBox(ScreenMatrix, 20, 45);
                        AnswerBox(ScreenMatrix, rBox, 84);
                        Q3(ScreenMatrix, 3, 75);
                        A1Q3(ScreenMatrix, rBox + 3, 13);
                        A2Q3(ScreenMatrix, 23, 55);
                        A3Q3(ScreenMatrix, rBox + 3, 88);
                        Size size = DrawSmallHero(ScreenMatrix, HeroRow, HeroCol);

                        DispStartScreen(ScreenMatrix);
                        if (HeroRow > 30)
                        {
                            while (1) {
                                FillMatrixByMyBackGround(ScreenMatrix);
                                DrawStartScreen(ScreenMatrix);
                                GmaeOver(ScreenMatrix, 10, 35);
                                DispStartScreen(ScreenMatrix);
                                if (_kbhit()) {
                                    char ch = _getch();
                                    if (ch == ' ')break;
                                }

                            }
                            HeroRow = 16;
                            HeroCol = 55;
                            break;
                        }
                    }
                    break;
                }
                while (1)
                {
                    FillMatrixByMyBackGround(ScreenMatrix);
                    DrawStartScreen(ScreenMatrix);
                    FaroukW(ScreenMatrix, 10, 50);
                    DispStartScreen(ScreenMatrix);
                    no4 = 1;
                    if (_kbhit()) {
                        char ch = _getch();
                        if (ch == ' ')break;
                    }
                }
            }

        }
        }

        HeroRow = 6;
        HeroCol = 40;
        while (1)
        {
            FillMatrixByMyBackGround(ScreenMatrix);
            DrawRoomPortal(ScreenMatrix);
            DrawSmallHero(ScreenMatrix,HeroRow,HeroCol);
            DispRoom(ScreenMatrix);
            if (_kbhit()) {
                char ch = _getch();
                MoveHero(ScreenMatrix, HeroRow, HeroCol, ch);
            } 
            if (HeroCol > 88&&HeroCol<94&&HeroRow==6)break;
        }


        int sleep = 0;
        int col = -50;
        while (true)
        {
            sleep++;
            FillMatrixByMyBackGround(ScreenMatrix);
            DrawLevel1Floor(ScreenMatrix, 22);
            if (sleep < 140)
            {
                Bed(ScreenMatrix, 0, 10);
                if (sleep <= 30)
                {
                    SleepySprite(ScreenMatrix, 4, 28);
                }
                if (sleep > 30 && sleep <= 50)
                {
                    wakySprite(ScreenMatrix, 4, 28);
                }
                if (sleep > 50)
                {
                    wakywakySprite(ScreenMatrix, 4, 28);
                }
                if (sleep >= 50 && sleep <= 80)
                {
                    Comment(ScreenMatrix, 1, 50);
                    WhereAmI(ScreenMatrix, 3, 57);
                }
                if (sleep > 80 && sleep <= 100)
                {
                    Comment(ScreenMatrix, 1, 50);
                    Dream(ScreenMatrix, 3, 53);
                }
               
            }

            if (sleep > 100&&sleep<120)
            {
                FillMatrixByMyBackGround(ScreenMatrix);
                col += 2;
                DrawStartScreen(ScreenMatrix);
                TheEnd(ScreenMatrix, 5, col);

            }
            
            if (col > 120)break;
            DispStartScreen(ScreenMatrix);

        }
    }


    // End of the game


    return 0;
}
